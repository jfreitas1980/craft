//-2WA
Use CtrlData.PKG

Use TabelasdeValidacao.pkg

Open CCGS225
Open HCGS3006
Open HCGS3003
Open HCGS3004
Open HCGS3007
Open HCGS3034

Class cHCGS3006_DataDictionary is a c_DataDictionary
    
    Procedure Construct_Object
        Forward Send Construct_Object
        Set Main_file to HCGS3006.File_Number

        Set Add_System_File to HCGS3004.File_Number DD_Lock_On_All

        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
    End_Procedure

    Procedure End_Construct_Object
        Forward Send End_Construct_Object

        //REMOVE EXTERNAL FILE
        Send Remove_System_File LOGDATA.FILE_NUMBER
        Send Remove_System_File LOGTEXT.FILE_NUMBER
    End_Procedure

    Procedure Creating_PCGS3006_01
        Forward Send Creating
        DateTime dtCurrentDateTime
        Boolean bChanged
        //------------------------------------------------------------
        //---Configurando os dados Usuario Que Esta Cadastrando
    
        Clear   CSAG311
        Move (psUsuarioSessao(Self))         to CSAG311.USUARIOSESSAO
        Find Eq CSAG311                      by 1
        If (Found) Begin                   
            Send p_RegistraAcessoUsuario "HCGS3006.USUARIO_ID_C" CSAG311.USUARIONUMERO
        End
        
        If (HCGS3006.CCGS210_ID = 5 or HCGS3006.CCGS210_ID = 6) Begin
            If (HCGS3006.VL_MODPAGMENTO = '') Move 1 to HCGS3006.VL_MODPAGMENTO
            If (HCGS3006.MODPAGTO_C = '') Move 1 to HCGS3006.MODPAGTO_C
        End
        
        If (HCGS3006.CCGS210_ID = 1 or HCGS3006.CCGS210_ID = 8) Begin
            Clear HCGS3004
            Move HCGS3006.PROPOSTA_ID to HCGS3004.PROPOSTA
            Find EQ HCGS3004 by 1
            If (HCGS3004.CLIENTE_FINAL_ID = 0 and HCGS3006.TABELA = 'HCGS3000') Begin
                If (HCGS3006.TAXA_ID = 9 and HCGS3006.VL_VENDA <> -1 and HCGS3006.VL_VENDA <> 0);
                    Add TSMG800.VLRLUMPSUMTAXANEGOC_FCL to HCGS3006.VL_VENDA //500
            End
        End
        
    End_Procedure // Creating_PCGS3006_01

    Procedure Update_PCGS3006_01
        String  sNRDOCTO sQuery sAux sAuxTpCalc1 sAuxTpCalc2 sAuxTpCalc3
        Number nValor 
        Integer iX
        String[] aAux
        
        Forward Send Update
        
        //------------------------------------------------------------
        //---Configurando os dados Usuario Que Esta Cadastrando
        Clear CSAG311
        Move (psUsuarioSessao(Self))         to CSAG311.USUARIOSESSAO
        Find Eq CSAG311                      by 1
        If (Found) Begin
            Send p_RegistraAcessoUsuario "HCGS3006.USUARIO_ID_A" CSAG311.USUARIONUMERO
        End
        
        If (HCGS3006.PESO_UNIDADE_V = '') Move 'KG' to HCGS3006.PESO_UNIDADE_V
        If (HCGS3006.PESO_UNIDADE_C = '') Move 'KG' to HCGS3006.PESO_UNIDADE_C
        
        //------------------------------------------------------------
        //----- VENDA
        If (HCGS3006.TP_CALCULO_V = 8) Begin
            Move HCGS3006.PERCENTUAL_APLICA_V to sAuxTpCalc1
            Move HCGS3006.PERCENTUAL_TIPO_V to sAuxTpCalc2
        End
        If (HCGS3006.TP_CALCULO_V = 3) Begin
            If (HCGS3006.PESO_FAIXA_V = 0) Move 1000 to HCGS3006.PESO_FAIXA_V
            Move HCGS3006.PESO_FAIXA_V to sAuxTpCalc2
            Move HCGS3006.PESO_UNIDADE_V to sAuxTpCalc1
        End
        
        // CALCULO DO AMOUNT A PARTIR DOS VALORES INDICADOS JUNTO AO TIPO DE CALCULO ESCOLHIDO PELO USUARIO        
        //SOMENTE PARA FCL 
        Clear HCGS3004
        Move HCGS3006.PROPOSTA_ID to HCGS3004.PROPOSTA
        Find eq HCGS3004 by 1
        If (not(Found)) Procedure_Return
        
        If (HCGS3004.CCGS202_ID = 'FCL' or HCGS3004.CCGS202_ID='AIR') Begin
        
            If (HCGS3006.TP_CALCULO_V <> 0) Begin
                Get fDoAmount HCGS3006.PROPOSTA_ID;
                              HCGS3006.VL_VENDA;
                              HCGS3006.VL_MINIMO_V;
                              HCGS3006.TP_CALCULO_V;
                              HCGS3006.VL_MAXIMO_V;
                              HCGS3006.TP_CONTAINER;
                              sAuxTpCalc2;//HCGS3006.PERCENTUAL_TIPO; //aux1
                              sAuxTpCalc1;//HCGS3006.PERCENTUAL_APLICA; //aux2
                              HCGS3006.RATIO_CBMKG_DENSIDADE;
                              to HCGS3006.VL_AMOUNT
            End
            Else Begin
                Move HCGS3006.VL_VENDA to HCGS3006.VL_AMOUNT
                If (HCGS3006.VL_MINIMO_V > HCGS3006.VL_VENDA and HCGS3006.VL_MINIMO_V <> 0);
                    Move HCGS3006.VL_MINIMO_V to HCGS3006.VL_AMOUNT
                     
                If (HCGS3006.VL_MAXIMO_V < HCGS3006.VL_VENDA and HCGS3006.VL_MAXIMO_V <> 0);
                    Move HCGS3006.VL_MAXIMO_V to HCGS3006.VL_AMOUNT
            End
        End
        
        //BOTTOM LINE
        If (HCGS3006.BOTTOM_VENDA = 0) Begin
            Move HCGS3006.VL_VENDA to HCGS3006.BOTTOM_VENDA
            Move HCGS3006.VL_AMOUNT to HCGS3006.BOTTOM_AMOUNT
        End
        
        //--------------------------------------------------
        //--- COMPRA
        If (HCGS3006.TP_CALCULO_C = 8) Begin
            Move HCGS3006.PERCENTUAL_APLICA_C to sAuxTpCalc1
            Move HCGS3006.PERCENTUAL_TIPO_C to sAuxTpCalc2
        End
        If (HCGS3006.TP_CALCULO_C = 3) Begin
            If (HCGS3006.PESO_FAIXA_C = 0) Move 1000 to HCGS3006.PESO_FAIXA_C
            Move HCGS3006.PESO_FAIXA_C to sAuxTpCalc2
            Move HCGS3006.PESO_UNIDADE_C to sAuxTpCalc1
        End
        
        // CALCULO DO AMOUNT A PARTIR DOS VALORES INDICADOS JUNTO AO TIPO DE CALCULO ESCOLHIDO PELO USUARIO
//        If (HCGS3006.TP_CALCULO_C <> 0) Begin
//            Get fDoAmount HCGS3006.PROPOSTA_ID;
//                          HCGS3006.VL_COMPRA;
//                          HCGS3006.VL_COMPRA_MIN;
//                          HCGS3006.TP_CALCULO_C;
//                          HCGS3006.VL_COMPRA_MAX;
//                          HCGS3006.TP_CONTAINER;
//                          sAuxTpCalc2;//HCGS3006.PERCENTUAL_TIPO; //aux1
//                          sAuxTpCalc1;//HCGS3006.PERCENTUAL_APLICA; //aux2
//                          HCGS3006.RATIO_CBMKG_DENSIDADE;
//                          to HCGS3006.VL_AMOUNT_C
//        End
//        Else Begin
//            Move HCGS3006.VL_COMPRA to HCGS3006.VL_AMOUNT_C
//            If (HCGS3006.VL_COMPRA_MIN > HCGS3006.VL_COMPRA and HCGS3006.VL_COMPRA_MIN <> 0);
//                Move HCGS3006.VL_COMPRA_MIN to HCGS3006.VL_AMOUNT_C
//                
//            If (HCGS3006.VL_COMPRA_MAX < HCGS3006.VL_COMPRA and HCGS3006.VL_COMPRA_MAX <> 0);
//                Move HCGS3006.VL_COMPRA_MAX to HCGS3006.VL_AMOUNT_C
//        End
        
        //PROCURA SE HA TAXAS COMISSIONADAS ATRELADAS E ATUALIZA A MOEDA CASO NECESSARIO.
        Move '' to sAux
        Move "SELECT RECNUM FROM DBO.HCGS3007 WHERE TAXA_ID=%1 AND TAXA_CLASSE='%2' AND PROPOSTA_ID=%3" to sQuery
        Move (SFormat(sQuery,HCGS3006.TAXA_ID,Trim(HCGS3006.TAXA_CLASSES),HCGS3006.PROPOSTA_ID)) to sQuery
        SQL_FIND_BEGIN hStmt_search sQuery
            If (sAux = '') Move (SqlFindValue(hStmt_search,1)) to sAux
            Else Move (sAux+','+SqlFindValue(hStmt_search,1)) to sAux
        SQL_FIND_END hStmt_search 
        If (sAux <> '') Begin
            Move "UPDATE DBO.HCGS3007 SET MOEDA_ID=%1 WHERE RECNUM IN (%2)" to sQuery
            Move (SFormat(sQuery,HCGS3006.MOEDA_VENDA,Trim(sAux))) to sQuery
            SQL_EXECUTE hStmt_search sQuery
        End
        
        //SETAR VALORES DEFAULT
//        If (HCGS3006.VL_MODPAGMENTO = '') Move '1' to HCGS3006.VL_MODPAGMENTO
//        If (HCGS3006.MODPAGTO_C = '') Move '1' to HCGS3006.MODPAGTO_C
        If (HCGS3006.MOEDA_COMPRA = '') Move HCGS3006.MOEDA_VENDA to HCGS3006.MOEDA_COMPRA
        Else If (HCGS3006.MOEDA_VENDA = '') Move HCGS3006.MOEDA_COMPRA to HCGS3006.MOEDA_VENDA
        
    End_Procedure // Update_PCGS3006_01

    Procedure Deleting_PCGS3006_01
       Forward Send Deleting
//       Send p_FFOperation 3 //ANDERSON RODRIGUES - 04/08/2021 21:08
    End_Procedure   // Deleting_PCGS3006_01

    Procedure Save_Main_File_PCGS3006_01
        Integer iRECNUM
        String sQuery sRecnum
        String sCNTRS
        Boolean bFound
        Number nTotal_D nTotal_F nTotal_O
        String s1 s2 s3
        String sPesquisa
        String sQuery_x sAuxQ
        
        Move HCGS3006.RECNUM to iRECNUM
        Forward Send Save_Main_File
        
//ANDERSON RODRIGUES - 04/08/2021 21:08        
//        If (iRECNUM=0) Begin
//            Move HCGS3006.RECNUM to iRECNUM
//            //--- NOVO REGISTRO
//            Send p_FFOperation 2
//        End // If (iRECNUM=0) Begin
//        Else Begin
//          //--- REGISTRO ALTERADO
//            Send p_FFOperation 1 
//        End
        
        Move False to bFound
        
    End_Procedure // Save_Main_File_PCGS3006_01
    
    Function fDoAmount Integer iPROPOSTA Number nVL_VENDA Number nVL_MINIMO_V Integer iTP_CALCULO_V;
        Number nVL_MAXIMO_V String sCONTAINER String sAux1 String sAux2 Number nRATIO_CBMKG_DENSIDADE Returns Number
        
        Number nAMOUNT
        Number nValue
        String sQuery
        Integer iQtd
        Number nCalculo
        Number nComissao
        Number nVarCalculoWeight nVarCalculoCbm
        Number nVarCalculoPesoTaxado nVarCalculoChargeableWgt
        
        Clear HCGS3004
        Move iPROPOSTA to HCGS3004.PROPOSTA
        Find eq HCGS3004 by 1
        If (not(Found)) Procedure_Return
        
        Move nVL_VENDA to nAMOUNT
        
        Move HCGS3004.TT_WEIGHT         to nVarCalculoWeight
        Move HCGS3004.TT_CBM            to nVarCalculoCbm
        Move HCGS3004.PESO_CALCULADO    to nVarCalculoChargeableWgt
        Move HCGS3004.PESO_TAXAVEL      to nVarCalculoPesoTaxado
        
        If (HCGS3004.CCGS202_ID <> 'AIR') Begin
            // CALCULO PARA TOM/M3 E PESO CUBADO.
            If (iTP_CALCULO_V = 1 or iTP_CALCULO_V = 5) Begin
                Move 1 to nValue
                If (nVarCalculoWeight <> 0 and nVarCalculoCbm <> 0) Begin
                    Move (nVarCalculoWeight /1000) to nValue
                    If (nVarCalculoCbm > nValue) Move nVarCalculoCbm to nValue
                End
                Else If (nVarCalculoWeight <> 0) Move (nVarCalculoWeight/1000) to nValue
                Else If (nVarCalculoCbm <> 0) Move nVarCalculoCbm to nValue
                Move (nValue * nAMOUNT) to nAMOUNT
            End
            
            // CALCULO DO PESO 
            If (iTP_CALCULO_V = 3) Begin
                If (sAux2 = 'KG') Begin
                    Move (nVarCalculoWeight /Number(sAux1)) to nValue
                    Move (nValue*nVL_VENDA) to nValue
                    Move nValue to nAMOUNT
                End
            End
            
            //EQUIPAMENTO (CNTR)
            If (iTP_CALCULO_V = 2) Begin
                If (sCONTAINER <> 'N.S.A.') Begin
                    Move "SELECT SUM(PCS) FROM DBO.HCGS3005 WHERE PROPOSTA_ID=%1 AND EQUIPAMENTO='%2'" to sQuery
                    Move (SFormat(sQuery,iPROPOSTA,sCONTAINER)) to sQuery
                End
                Else Begin
                    Move "SELECT SUM(PCS) FROM DBO.HCGS3005 WHERE PROPOSTA_ID=%1" to sQuery
                    Move (SFormat(sQuery,iPROPOSTA)) to sQuery 
                End
                SQL_FIND_BEGIN hStmt_container sQuery
                    Move (SqlFindValue(hStmt_container,1)) to iQtd
                SQL_FIND_END hStmt_container
                
                Move (iQtd*nVL_VENDA) to nAMOUNT
            End
            
            //CALCULO POR TEUS
            If (iTP_CALCULO_V = 9 and HCGS3004.CCGS202_ID = 'FCL') Begin
                Move 0 to iQtd
                Move "SELECT EQUIPAMENTO,PCS FROM DBO.HCGS3005 WHERE PROPOSTA_ID=%1 AND EQUIPAMENTO NOT LIKE '%N.S.A.%'" to sQuery
                Move (SFormat(sQuery,iPROPOSTA)) to sQuery
                SQL_FIND_BEGIN hStmt_search sQuery
                    If (SqlFindValue(hStmt_search,1) contains '20') Begin                    
                        Add (SqlFindValue(hStmt_search,2)) to iQtd
                    End
                    If (SqlFindValue(hStmt_search,1) contains '40') Begin
                        Add (SqlFindValue(hStmt_search,2)*2) to iQtd
                    End
                SQL_FIND_END hStmt_search 
                
                Move (iQtd*nVL_VENDA) to nAMOUNT
                
            End
        End
        Else Begin
        //- AIR -------------------------------------
            Case Begin
                Case (iTP_CALCULO_V = 10)
                //-CALCULO POR GROSS WEIGHT
                    //If (nVarCalculoWeight <> 0 and nVarCalculoPesoTaxado <> 0) Begin
                    //    If (nVarCalculoPesoTaxado >= nVarCalculoWeight) Move nVarCalculoPesoTaxado to nValue
                    //    Else Move nVarCalculoWeight to nValue
                    //End
                    Move (nVarCalculoWeight * nVL_VENDA) to nAMOUNT
                    Case Break
                Case (iTP_CALCULO_V = 11)
                //-CALCULO POR PESO TAXAVEL
                    //If (nVarCalculoWeight <> 0 and nVarCalculoPesoTaxado <> 0) Begin
                    //    If (nVarCalculoPesoTaxado >= nVarCalculoWeight) Move nVarCalculoPesoTaxado to nValue
                    //    Else Move nVarCalculoWeight to nValue
                    //End
                    Move (nVarCalculoPesoTaxado * nVL_VENDA) to nAMOUNT
                    Case Break
                Case (iTP_CALCULO_V = 12)
                //-CALCULO POR PESO CALCLULADO (VOLUMETRICO)
                    Move (nVarCalculoCbm * nRATIO_CBMKG_DENSIDADE) to nVarCalculoChargeableWgt
                    //-
                    //If (nVarCalculoWeight <> 0 and nVarCalculoChargeableWgt <> 0) Begin
                    //    If (nVarCalculoChargeableWgt >= nVarCalculoWeight) Move nVarCalculoChargeableWgt to nValue
                    //    Else Move nVarCalculoWeight to nValue
                    //End
                    Move (nVarCalculoChargeableWgt * nVL_VENDA) to nAMOUNT
                    Case Break
                Case (iTP_CALCULO_V = 13)
                //-CALCULO POR FLAT
                    Move nVL_VENDA to nAMOUNT
                    Case Break
                Case (iTP_CALCULO_V = 6)
                //-CALCULO POR HAWB
                    Move nVL_VENDA to nAMOUNT
                    Case Break
            Case End
        End //- AIR
        
        //PERCENTUAL
        If (iTP_CALCULO_V = 8 and sAux1 <> 0) Begin
            Move (nVL_VENDA/100) to nVL_VENDA
            If (sAux1 = '1') Begin // TAXA ESPECIFICA
                String auxclasse auxtaxa
                Move (Trim(sAux2)) to sAux2
                Move (Right(sAux2,1)) to auxclasse
                Move (Left(sAux2,Length(sAux2)-1)) to auxtaxa
                If (auxtaxa = '') Move HCGS3006.TAXA_CLASSES to auxtaxa
                
                Move "SELECT VL_AMOUNT FROM DBO.HCGS3006 WHERE" to sQuery
                Move (sQuery*SFormat("PROPOSTA_ID=%1 AND TAXA_ID=%2 AND TAXA_CLASSES='%3'",iPROPOSTA,Trim(auxtaxa),Trim(auxclasse))) to sQuery
            End
            If (sAux1 = '2') Begin // CLASSE
                Move "SELECT SUM(VL_AMOUNT) FROM DBO.HCGS3006 WHERE" to sQuery
                Move (sQuery*SFormat("PROPOSTA_ID=%1 AND TAXA_CLASSES='%2' AND TP_CALCULO_V<>8",iPROPOSTA,Trim(sAux2))) to sQuery
            End
            
            Move (sQuery*SFormat("AND TP_CONTAINER='%1'",Trim(sCONTAINER))) to sQuery
            
            SQL_FIND_BEGIN hStmt_percent sQuery
                Move (SqlFindValue(hStmt_percent,1)) to nCalculo
            SQL_FIND_END hStmt_percent
            
            If (sAux1='1') Begin
                Move (SFormat("SELECT AMOUNT FROM DBO.HCGS3007 WHERE PROPOSTA_ID=%1 AND TAXA_ID=%2 AND TAXA_CLASSE='%3'",iPROPOSTA,Trim(auxtaxa),Trim(auxclasse))) to sQuery
                SQL_FIND_BEGIN hStmt_percent sQuery
                    Move (SqlFindValue(hStmt_percent,1)) to nComissao
                SQL_FIND_END hStmt_percent
                
                Move (nComissao+nCalculo) to nCalculo
            End
            
            Move (nCalculo*nVL_VENDA) to nAMOUNT
        End
        
        // PERCENTUAL POR BL
        If (iTP_CALCULO_V = 14) Begin
            Move (SFormat("SELECT SUM(VL_AMOUNT) FROM DBO.HCGS3006 WHERE PROPOSTA_ID=%1",iPROPOSTA)) to sQuery
            Move (sQuery*SFormat("AND (TAXA_CLASSES='O' OR TAXA_CLASSES='F')")) to sQuery
            Move (sQuery*SFormat("AND MOEDA_VENDA = '%1' AND TP_CALCULO_V <> 8",HCGS3006.MOEDA_VENDA)) to sQuery
            SQL_FIND_BEGIN hStmt_percent sQuery
                Move (SqlFindValue(hStmt_percent,1)) to nCalculo
            SQL_FIND_END hStmt_percent
            Move (nVL_VENDA/100) to nVL_VENDA
            Move (nCalculo*nVL_VENDA) to nAMOUNT            
        End
        
        
//        If (HCGS3004.CCGS202_ID = 'LCL') Begin
            If (nVL_MINIMO_V > nAMOUNT and nVL_MINIMO_V <> 0);
                Move nVL_MINIMO_V to nAMOUNT
                
            If (nVL_MAXIMO_V < nAMOUNT and nVL_MAXIMO_V <> 0);
                Move nVL_MAXIMO_V to nAMOUNT
//        End
        
//        Move (ROUNDALL(nAMOUNT,2)) to nAMOUNT
        
        Function_Return nAMOUNT
        
    End_Function //fDoAmount
    
    Procedure Backout_PCGS3006_01
        Forward Send Backout
//        Send p_FFOperation 0 //ANDERSON RODRIGUES - 04/08/2021 21:08
    End_Procedure   // Backout_PCGS3006_01
    
    Function Validate_Save_PCGS3006_01 Returns Integer
        Integer iReturnval
        Integer iError_Id
        String  sError_Ds
        String  sError_Tabela
        Boolean bFOUND
        Forward Get Validate_Save to iReturnval
        If (not(iReturnval)) Begin
        End 
        Function_Return iReturnval
    End_Function // Validate_Save_PCGS3006_01

    Function Validate_Delete_PCGS3006_01 Returns Integer
        Integer iReturnVal
        Integer iError_Id
        String  sError_Ds
        String  sError_Tabela
        
        Forward Get Validate_Delete to iReturnVal
        If not (iReturnVal) Begin
        End    
        Function_Return iReturnVal
    End_Function // Validate_Delete_PCGS3006_01
    
	#Include p_FFOperation.inc

    Procedure Field_Defaults
        Forward Send Field_Defaults
        Set Field_Changed_Value Field HCGS3006.CARRIER_ID to 0
    End_Procedure

End_Class