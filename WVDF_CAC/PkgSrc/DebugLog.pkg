//-2WA
//********************************************************************
// 21/03/2012 - Fernando Emiliano David Nunes - Criacao do Pacote
//********************************************************************
// 03/04/2013 - Fernando Emiliano David Nunes - Atualizacao do Pacote
//********************************************************************
// 21/12/2013 - Anderson Rodrigues - Revisao do Pacote
//********************************************************************

Use seq_chnl.pkg
Declare_Datafile TSMG800

Function InDebug Returns Boolean
    Open TSMG800
    Function_Return (TSMG800.LOGQUERY_YN = "D") //(D)EBUG
End_Function // InDebug

Function DebugLogFileName Returns String
   String sApplicationFileName
   
   Register_Object oApplication
   Get GetApplicationFileName of oApplication to sApplicationFileName
   Move (Replaces(".exe", sApplicationFileName, "")) to sApplicationFileName
   
   Function_Return (sApplicationFileName+"_DEBUG.log")    
End_Function // DebugLogFileName
 
Procedure WriteDebugLogTrim Handle hoSender String sTextLog //Fernando Nunes, 02/04/2013
    Integer iChOut
    String sApplicationFileName
    
    Register_Object oApplication
    Get GetApplicationFileName of oApplication to sApplicationFileName
    
    Move (Seq_New_Channel()) to iChOut
    
    //Vou Gerar um log com a STATEMENT utilizada no filtro dentro da pasta PROGRAMS da Workspace.
    Append_Output channel iChOut (Replaces("_DEBUG.", DebugLogFileName(Self), "_DEBUG_RevomeTrim."))
       Writeln channel iChOut (SFormat('[%1] %2.%3', CurrentDateTime(), Name(hoSender), sTextLog))
    Close_Output channel iChOut  
    
    Send Seq_Release_Channel iChOut 
    
End_Procedure // WriteDebugLogTrim

Procedure WriteDebugLog Overloaded Handle hoSender String sTextLog Boolean bWriteHTML //Fernando Nunes, 02/04/2013
    Integer iChOut
    String sApplicationFileName
    
    If (not(InDebug(Self))) Procedure_Return
    
    Register_Object oApplication
    Get GetApplicationFileName of oApplication to sApplicationFileName
    
    Move (Seq_New_Channel()) to iChOut
    
    //Vou Gerar um log com a STATEMENT utilizada no filtro dentro da pasta PROGRAMS da Workspace.
    Append_Output channel iChOut (DebugLogFileName(Self))
       Writeln channel iChOut (SFormat('[%1] %2.%3', CurrentDateTime(), Name(hoSender), sTextLog))
    Close_Output channel iChOut  
    
    Send Seq_Release_Channel iChOut 
    
    #IFDEF Is$WebApp
    If (bWriteHTML) Send WriteHtml (SFormat('[%1] %2.%3<BR>', DebugLogFileName(Self), Name(hoSender), sTextLog ))   
    #ENDIF
End_Procedure // WriteDebugLog

Procedure WriteDebugLog Overloaded Handle hoSender String sTextLog  //Fernando Nunes, 02/04/2013
    Send WriteDebugLog hoSender sTextLog False
End_Procedure // WriteDebugLog

//Procedure WriteDebugLogToHTML Handle hoSender String sTextLog
//   Send WriteHtml (SFormat('<BR>[%1] %2.%3<BR><BR>', DebugLogFileName(), Name(hoSender), sTextLog ))
//End_Procedure // WriteDebugLogToHTML
//
//Procedure WriteDebugLog Handle hoSender String sTextLog
//    Send WriteDebugLogToHTML hoSender sTextLog
//    Send WriteDebugLogToFile hoSender sTextLog
//End_Procedure // WriteDebugLog


Function SQLRemoveTrim  String sStmt Boolean bOnlyAfterWhere Handle hoSender Returns String
    String sResult sParteWhere
    Integer iPosWhere iPosRisco iPosTrim
    Date dData 
    Integer iHora iMinuto
    Boolean bAtivar
    
    Sysdate dData iHora iMinuto
    
    
    //Move ((dData >= Date("05/04/2013") and dData <= Date("09/04/2013"))  and (iHora = 16)) to bAtivar
    
    //---  LOG DESLIGADO
    Move (False) to bAtivar
    
    If (bOnlyAfterWhere) ;
        Move (Pos("WHERE", Uppercase(sStmt))) to iPosWhere
    Else ;
        Move 1 to iPosWhere
    
    If (iPosWhere > 0 or not(bOnlyAfterWhere)) Begin
       If (bOnlyAfterWhere) ;
          Move (Mid(sStmt, iPosWhere-1, 1)) to sResult
       Else ;
          Move "" to sResult
             
       Move (Mid(sStmt, (length(sStmt) - iPosWhere)+1, iPosWhere)) to sParteWhere

       Move (Pos("TRIM", Uppercase(sParteWhere))) to iPosTrim
       
       If (iPosTrim > 0) Begin
           //Send WriteDebugLogTrim Self (SFormat('SQLRemoveTrim.%2.Original="%1"',sStmt, If(bAtivar, "ATIVADO", "DESATIVADO")))
           
           If (bAtivar) Begin
                                  Move (Pos("LIKE", Uppercase(sStmt))) to iPosRisco
               If (iPosRisco = 0) Move (Pos("||", Uppercase(sStmt)))   to iPosRisco
            
               If (iPosRisco = 0) Begin
                   Move (Replaces("LTRIM(",sParteWhere,"(")) to sParteWhere
                   Move (Replaces("LTrim(",sParteWhere,"(")) to sParteWhere
                   Move (Replaces("Ltrim(",sParteWhere,"(")) to sParteWhere
                   Move (Replaces("ltrim(",sParteWhere,"(")) to sParteWhere
                   
                   Move (Replaces("RTRIM(",sParteWhere,"(")) to sParteWhere
                   Move (Replaces("RTrim(",sParteWhere,"(")) to sParteWhere
                   Move (Replaces("Rtrim(",sParteWhere,"(")) to sParteWhere
                   Move (Replaces("rtrim(",sParteWhere,"(")) to sParteWhere
                   
                   Move (Replaces("TRIM(",sParteWhere,"(")) to sParteWhere
                   Move (Replaces("Trim(",sParteWhere,"(")) to sParteWhere
                   Move (Replaces("trim(",sParteWhere,"(")) to sParteWhere
                   
                   Move (sResult + sParteWhere) to sResult
                   
                   Send WriteDebugLogTrim Self (SFormat('SQLRemoveTrim.%2.Modificado="%1"',sResult, If(bAtivar, "ATIVADO", "DESATIVADO")))                   
                   Function_Return sResult
               End
           End
       End
    End
    
    Function_Return sStmt 
    
End_Function // SQLRemoveTrim
