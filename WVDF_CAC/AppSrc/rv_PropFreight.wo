//-2WA
Use cWebBusinessProcess.pkg
Use cDRReport.pkg
Open CSAG308
Open CSAG339
Open HCGS3003
Open CCGS226
Open HSAG325_AIR
Open HCGS3000_AIR
Open HCGS3000_AIRFR8
Open HSAG560

Use cHCGS3004_DataDictionary.dd

Object oRvPropFreight is a cWebBusinessProcess
    Property Integer piProposta
    Property Boolean pbHiddenArmador
    Property Boolean pb20
    Property Boolean pb40
    
    Set pb20 to False
    Set pb40 to False
    
    #Include USUARIOOPERACAO.inc
    
    Object oReport is a cDRReport

        Procedure OnInitializeReport
            String sReportId
            Integer eOutputDeviceMode

            Forward Send OnInitializeReport

            Get psReportId to sReportId
            Send LoadRDSData sReportId -1 0
            Send SetFilters
            Send SetSortFields
            Send SetParameters
        End_Procedure // OnInitializeReport

        // Activate the code inside this method if you want to change the database connection
        Procedure ChangeODBCDataSource String sReportId
            String sConnectionString sDSN sSubReportId
            Integer iSubReports iSubReport

            Get psDatabaseConnection sReportId to sConnectionString
            Get psDatabaseName sReportId to sDSN
            // ToDo: Change the contents of sDSN and/or sConnectionString
            Clear TSMG800
            Smart_Find Ge TSMG800 by 0
            Move (Trim(TSMG800.SIDI_CSV)) to sConnectionString
			//Move "DSN=CROSS;Description=CROSS;UID=sa;PWD=2wa@@;APP=DataFlex Reports Developer Edition;WSID=WIN-AUDT2DDHALM\SQLEXPRESS;DATABASE=CROSS;" to sConnectionString
            //SERVER=WIN-AUDT2DDHALM\SQLEXPRESS;UID=sa;PWD=2wa@@;DATABASE=CROSS, 1
			Move "CRAFT" to sDSN                 

            Set psDatabaseConnection sReportId to sConnectionString
            Set psDatabaseName sReportId to sDSN

            Get SubReportCount sReportId to iSubReports
            Decrement iSubReports
            For iSubReport from 0 to iSubReports
                Get SubReportId sReportId iSubReport to sSubReportId
                Send ChangeODBCDataSource sSubReportId
            Loop
        End_Procedure //ChangeODBCDataSource

        // In this routine we find the code that sets the parameter values. The values
        // for the parameters can be retrieved from an input control or from own coding.
        Procedure SetParameters
            String  sReportId
            String  sMsgBluSafe
            String  sValue
            String  sQuery
            String  sClasse
            String  sSiglaMoeda sSiglaMoeda_Anterior
            String  sBitmapPath
            String  sPath
            String  sPathHeader 
            String  sPathFooter
            String[] aUserPermited
            String sAuxsUsers
            String[] ttSigla
            String[] ttComissaoSigla
            
            Handle  hoWorkspace
            
            Boolean bOkay_O bOkay_F bOkay_D
            Boolean bValid
            Boolean bTaxas
            Boolean bSobConsulta
            
            Integer iPointer iPointer2
            Integer iParameter
            
            Number[] ttValor
            Number  nValueMoeda nTotalMoeda
            Number[] ttComissaoValor
            
            String  sHCGS3004PROPOSTA
            Get piProposta to sHCGS3004PROPOSTA
            
            Get phoWorkspace of ghoApplication to hoWorkspace                                  
            Get psBitmapPath of hoWorkspace    to sBitmapPath                                     
            Get PathAtIndex  of hoWorkspace sBitmapPath 1 to sPath
            
            Move (sPath+'\') to sPath //C:\CROSS\WVDF_CAC_v8r0\Bitmaps
            
            Clear HCGS3004
            Move sHCGS3004PROPOSTA to HCGS3004.PROPOSTA
            Find Eq HCGS3004 by 1

            //-- DEAR
            Move 'Customer' to sValue
            Get Find_Code_Description of oCSAG367_FVT 'WS_HCGS3004_CSAG378' to sQuery
            Move (SFormat(sQuery,HCGS3004.CSAG320_ID)) to sQuery

            SQL_FIND_BEGIN hStmt_contact sQuery
                Move (Trim(SqlFindValue(hStmt_contact,1))) to sValue
            SQL_FIND_END hStmt_contact
             
            Get psReportId to sReportId
            Get ParameterIdByName sReportId "Contato" to iParameter
            Set psParameterValue sReportId iParameter to sValue
            
            Clear CSAG339
            Move 'PORTRAIT_HEADER' to CSAG339.PROGRAMAACAO
            Find eq CSAG339 by 1
            Move (Trim(CSAG339.PROGRAMALINK)) to sPathHeader
            
            Clear CSAG339
            Move 'PORTRAIT_FOOTER' to CSAG339.PROGRAMAACAO
            Find eq CSAG339 by 1
            Move (Trim(CSAG339.PROGRAMALINK)) to sPathFooter
            
            Clear CSAG308
            Move HCGS3004.CSAG308_ID to CSAG308.CLIENTENUMERO
            Find Eq CSAG308 by 1
            If (Trim(CSAG308.PORTRAIT_HDR)<>'');
                Move (Trim(CSAG308.PORTRAIT_HDR))  to sPathHeader
            If (Trim(CSAG308.PORTRAIT_FOOT)<>'');
                Move (Trim(CSAG308.PORTRAIT_FOOT)) to sPathFooter
             
            Set pbHiddenArmador to (HCGS3004.CARRIER_HIDE = 1)
            
            Move 'Logo Craft 2.png'  to sPathHeader
            Move 'Craft - Rodape paisagem 2.jpg' to sPathFooter 

            Get psReportId to sReportId
            Get ParameterIdByName sReportId "PathBitmaps" to iParameter
            Set psParameterValue sReportId iParameter to sPath
            
            Get psReportId to sReportId
            Get ParameterIdByName sReportId "PathHeader" to iParameter
            Move (sPath+sPathHeader) to sValue
            Set psParameterValue sReportId iParameter to sValue
            
            Get psReportId to sReportId
            Get ParameterIdByName sReportId "PathFooter" to iParameter
            Move (sPath+sPathFooter) to sValue
            Set psParameterValue sReportId iParameter to sValue
            
            Clear CSAG339
            Move 'PATHCROSS' to CSAG339.PROGRAMAACAO
            Find eq CSAG339 by 1
            
            //--- REGRA DESATIVADA
            Get psReportId to sReportId
            Get ParameterIdByName sReportId "HiddenOrigem" to iParameter
            Move False to sValue
            Set psParameterValue sReportId iParameter to sValue

            Get psReportId to sReportId
            Get ParameterIdByName sReportId "HiddenFrete" to iParameter
            Move False to sValue
            Set psParameterValue sReportId iParameter to sValue

            Get psReportId to sReportId
            Get ParameterIdByName sReportId "HiddenDestino" to iParameter
            Move False to sValue
            Set psParameterValue sReportId iParameter to sValue
            
            If (HCGS3004.CCGS202_ID = 'LCL') Begin
                Get psReportId to sReportId
                Get ParameterIdByName sReportId "HiddenEspecial" to iParameter
                Move False to sValue
                Set psParameterValue sReportId iParameter to sValue
            End
            
            Get psReportId to sReportId
            Get ParameterIdByName sReportId "HiddenArmador" to iParameter
            Get pbHiddenArmador to sValue
            Set psParameterValue sReportId iParameter to sValue
            //-- ESPECIAL
            If (HCGS3004.CCGS202_ID = 'LCL') Begin
                Move '' to sValue
                Move '' to sSiglaMoeda
                Move 0  to nValueMoeda
                Move (ResizeArray(ttComissaoSigla,0)) to ttComissaoSigla
                Move (ResizeArray(ttComissaoValor,0)) to ttComissaoValor
                Move (ResizeArray(ttSigla,0)) to ttSigla
                Move (ResizeArray(ttValor,0)) to ttValor
                
                
                //VERIFICA SE HA TAXAS SOB CONSULTA
                Move "SELECT RECNUM FROM DBO.HCGS3006" to sQuery
                Move (sQuery*"WHERE PROPOSTA_ID=%1 AND TAXA_CLASSES = 'S' ") to sQuery
    	        Move (sQuery*"AND STATUS='1' AND VL_VENDA=-1") to sQuery
    
    	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery
    	        Move False to bSobConsulta

    	        SQL_FIND_BEGIN hStmt_moeda sQuery
    	            Move True to bSobConsulta
    	        SQL_FIND_END hStmt_moeda 
                
                Move False to bTaxas
                If (not(bSobConsulta)) Begin
                    Move "SELECT b.SIGLA,SUM(a.VL_AMOUNT) FROM DBO.HCGS3006 a, dbo.CCGS218 b" to sQuery
        	        Move (sQuery*"WHERE a.PROPOSTA_ID=%1") to sQuery
                    Move (sQuery*"AND a.TAXA_CLASSES = 'S'") to sQuery
        	        Move (sQuery*"AND b.CODIGO=a.MOEDA_VENDA AND a.STATUS='1' GROUP BY b.SIGLA") to sQuery
        	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery

        	        SQL_FIND_BEGIN hStmt_moeda sQuery
        	            
        	            Move (SizeOfArray(ttSigla)) to iPointer
        	            Move (Trim(SqlFindValue(hStmt_moeda,1))) to ttSigla[iPointer]
        	            Move      (SqlFindValue(hStmt_moeda,2))  to ttValor[iPointer]
        	            Move (ROUNDALL(ttValor[iPointer],2))  to ttValor[iPointer]
        	            
        	            Move True to bTaxas
        	            
        	        SQL_FIND_END hStmt_moeda 
                    
        	        Move "SELECT B.SIGLA,SUM(A.AMOUNT) FROM DBO.HCGS3007 A" to sQuery
        	        Move (sQuery*"LEFT JOIN DBO.CCGS218 B ON A.MOEDA_ID=B.CODIGO") to sQuery
        	        Move (sQuery*"WHERE a.PROPOSTA_ID=%1") to sQuery
        	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery
    
                    Move (sQuery*"AND a.TAXA_CLASSE = 'S'") to sQuery
        	        Move (sQuery*"GROUP BY b.SIGLA") to sQuery
        	        

        	        SQL_FIND_BEGIN hStmt_moeda sQuery
        	            
        	            Move (SizeOfArray(ttComissaoSigla)) to iPointer
        	            Move (Trim(SqlFindValue(hStmt_moeda,1))) to ttComissaoSigla[iPointer]
        	            Move      (SqlFindValue(hStmt_moeda,2))  to ttComissaoValor[iPointer]
        	            Move (ROUNDALL(ttComissaoValor[iPointer],2))  to ttComissaoValor[iPointer]
        	            
        	        SQL_FIND_END hStmt_moeda
        	        
        	        If (bTaxas) Begin
            	        For iPointer from 0 to (SizeOfArray(ttSigla)-1)
            	        
            	            For iPointer2 from 0 to (SizeOfArray(ttComissaoSigla)-1)
            	                
            	                If (ttSigla[iPointer] = ttComissaoSigla[iPointer2]) Begin
            	                    Move (ttComissaoValor[iPointer2]+ttValor[iPointer]) to ttValor[iPointer]    
                                End
            	                
            	            Loop
            	            
            	            If (HCGS3004.CCGS202_ID = "AIR");    	            
            	                Move (sValue+If(sValue<>'', ' AND ', '')+FormatNumber(ttValor[iPointer],2)*ttSigla[iPointer]) to sValue
            	            Else;    
            	                Move (sValue+If(sValue<>'', ' AND ', '')+ttSigla[iPointer]*FormatNumber(ttValor[iPointer],2)) to sValue
            	            
            	        Loop // END ORIGEM CALCULO TOTAL 
        	        End
        	        Else Begin
        	            For iPointer2 from 0 to (SizeOfArray(ttComissaoSigla)-1)
                            If (HCGS3004.CCGS202_ID = "AIR");    	            
            	                Move (sValue+If(sValue<>'', ' AND ', '')+FormatNumber(ttComissaoValor[iPointer2],2)*ttComissaoSigla[iPointer2]) to sValue
                            Else;
            	                Move (sValue+If(sValue<>'', ' AND ', '')+ttComissaoSigla[iPointer2]*FormatNumber(ttComissaoValor[iPointer2],2)) to sValue
        	            Loop
                    End
                End
                Else Begin
                    Move "SOB CONSULTA" to sValue
                End
                
                Get psReportId to sReportId
                Get ParameterIdByName sReportId "TotalEspecial" to iParameter
                Set psParameterValue sReportId iParameter to sValue
            End
            
            //-- ORIGEM
            Move '' to sValue
            Move '' to sSiglaMoeda
            Move 0  to nValueMoeda
            Move (ResizeArray(ttComissaoSigla,0)) to ttComissaoSigla
            Move (ResizeArray(ttComissaoValor,0)) to ttComissaoValor
            Move (ResizeArray(ttSigla,0)) to ttSigla
            Move (ResizeArray(ttValor,0)) to ttValor
            
            //VERIFICA SE HA TAXAS SOB CONSULTA
            Move "SELECT RECNUM FROM DBO.HCGS3006" to sQuery
	        If (HCGS3004.CCGS202_ID = 'AIR') Begin
                Move (sQuery*"WHERE PROPOSTA_ID=%1 AND (TAXA_CLASSES = 'O' OR TAXA_CLASSES = 'I')") to sQuery
            End
	        Else Begin
	            If (HCGS3004.CCGS200_ID = '1') Move (sQuery*"WHERE PROPOSTA_ID=%1 AND (TAXA_CLASSES = 'O' OR TAXA_CLASSES = 'S')") to sQuery
                Else Move (sQuery*"WHERE PROPOSTA_ID=%1 AND TAXA_CLASSES = 'O' ") to sQuery
            End
	        Move (sQuery*"AND STATUS='1' AND VL_VENDA=-1") to sQuery

	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery
	        Move False to bSobConsulta

	        SQL_FIND_BEGIN hStmt_moeda sQuery
	            Move True to bSobConsulta
	        SQL_FIND_END hStmt_moeda 
            
            Move False to bTaxas
            If (not(bSobConsulta)) Begin
                Move "SELECT b.SIGLA,SUM(a.VL_AMOUNT) FROM DBO.HCGS3006 a, dbo.CCGS218 b" to sQuery
    	        Move (sQuery*"WHERE a.PROPOSTA_ID=%1") to sQuery
    	        If (HCGS3004.CCGS202_ID = 'AIR') Move (sQuery*"AND (a.TAXA_CLASSES = 'O' OR a.TAXA_CLASSES = 'I')") to sQuery
    	        Else Move (sQuery*"AND a.TAXA_CLASSES = 'O'") to sQuery

    	        Move (sQuery*"AND b.CODIGO=a.MOEDA_VENDA AND a.STATUS='1' GROUP BY b.SIGLA") to sQuery
    	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery

    	        SQL_FIND_BEGIN hStmt_moeda sQuery
    	            
    	            Move (SizeOfArray(ttSigla)) to iPointer
    	            Move (Trim(SqlFindValue(hStmt_moeda,1))) to ttSigla[iPointer]
    	            Move      (SqlFindValue(hStmt_moeda,2))  to ttValor[iPointer]
    	            Move (ROUNDALL(ttValor[iPointer],2))  to ttValor[iPointer]
    	            
    	            Move True to bTaxas
    	            
    	        SQL_FIND_END hStmt_moeda 
                
    	        Move "SELECT B.SIGLA,SUM(A.AMOUNT) FROM DBO.HCGS3007 A" to sQuery
    	        Move (sQuery*"LEFT JOIN DBO.CCGS218 B ON A.MOEDA_ID=B.CODIGO") to sQuery
    	        Move (sQuery*"WHERE a.PROPOSTA_ID=%1") to sQuery
    	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery

    	        If (HCGS3004.CCGS202_ID = 'AIR') Move (sQuery*"AND (a.TAXA_CLASSE = 'O' OR a.TAXA_CLASSE = 'I')") to sQuery
    	        Else Move (sQuery*"AND a.TAXA_CLASSE = 'O'") to sQuery
    	        Move (sQuery*"GROUP BY b.SIGLA") to sQuery
    	        

    	        SQL_FIND_BEGIN hStmt_moeda sQuery
    	            
    	            Move (SizeOfArray(ttComissaoSigla)) to iPointer
    	            Move (Trim(SqlFindValue(hStmt_moeda,1))) to ttComissaoSigla[iPointer]
    	            Move      (SqlFindValue(hStmt_moeda,2))  to ttComissaoValor[iPointer]
    	            Move (ROUNDALL(ttComissaoValor[iPointer],2))  to ttComissaoValor[iPointer]
    	            
    	        SQL_FIND_END hStmt_moeda
    	        
    	        If (bTaxas) Begin
        	        For iPointer from 0 to (SizeOfArray(ttSigla)-1)
        	        
        	            For iPointer2 from 0 to (SizeOfArray(ttComissaoSigla)-1)
        	                
        	                If (ttSigla[iPointer] = ttComissaoSigla[iPointer2]) Begin
        	                    Move (ttComissaoValor[iPointer2]+ttValor[iPointer]) to ttValor[iPointer]    
                            End
        	                
        	            Loop
        	            
        	            If (HCGS3004.CCGS202_ID = "AIR");    	            
        	                Move (sValue+If(sValue<>'', ' AND ', '')+FormatNumber(ttValor[iPointer],2)*ttSigla[iPointer]) to sValue
        	            Else;    
        	                Move (sValue+If(sValue<>'', ' AND ', '')+ttSigla[iPointer]*FormatNumber(ttValor[iPointer],2)) to sValue
        	            
        	        Loop // END ORIGEM CALCULO TOTAL 
    	        End
    	        Else Begin
    	            For iPointer2 from 0 to (SizeOfArray(ttComissaoSigla)-1)
                        If (HCGS3004.CCGS202_ID = "AIR");    	            
        	                Move (sValue+If(sValue<>'', ' AND ', '')+FormatNumber(ttComissaoValor[iPointer2],2)*ttComissaoSigla[iPointer2]) to sValue
                        Else;
        	                Move (sValue+If(sValue<>'', ' AND ', '')+ttComissaoSigla[iPointer2]*FormatNumber(ttComissaoValor[iPointer2],2)) to sValue
    	            Loop
                End
            End
            Else Begin
                Move "SOB CONSULTA" to sValue
            End
	        
            Get psReportId to sReportId
            Get ParameterIdByName sReportId "TotalOrigem" to iParameter
            Set psParameterValue sReportId iParameter to sValue

            //-- FRETE
            Move '' to sValue
            Move '' to sSiglaMoeda
            Move 0  to nValueMoeda
            Move (ResizeArray(ttComissaoSigla,0)) to ttComissaoSigla
            Move (ResizeArray(ttComissaoValor,0)) to ttComissaoValor
            Move (ResizeArray(ttSigla,0)) to ttSigla
            Move (ResizeArray(ttValor,0)) to ttValor
            
            //VERIFICA SE HA TAXAS SOB CONSULTA
            Move "SELECT RECNUM FROM DBO.HCGS3006" to sQuery
	        Move (sQuery*"WHERE PROPOSTA_ID=%1 AND TAXA_CLASSES = 'F' ") to sQuery
	        Move (sQuery*"AND STATUS='1' AND VL_VENDA=-1") to sQuery
	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery

	        Move False to bSobConsulta


	        SQL_FIND_BEGIN hStmt_moeda sQuery
	            Move True to bSobConsulta
	        SQL_FIND_END hStmt_moeda 
            
            If (not(bSobConsulta)) Begin
                Move "SELECT b.SIGLA,SUM(a.VL_AMOUNT) FROM DBO.HCGS3006 a, dbo.CCGS218 b" to sQuery
    	        Move (sQuery*"WHERE a.PROPOSTA_ID=%1 AND a.TAXA_CLASSES = 'F'") to sQuery
    	        Move (sQuery*"AND b.CODIGO=a.MOEDA_VENDA AND a.STATUS='1' GROUP BY b.SIGLA") to sQuery
    	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery

    	        SQL_FIND_BEGIN hStmt_moeda sQuery
                    
                    Move (SizeOfArray(ttSigla)) to iPointer
    	            Move (Trim(SqlFindValue(hStmt_moeda,1))) to ttSigla[iPointer]
    	            Move      (SqlFindValue(hStmt_moeda,2))  to ttValor[iPointer]
    	            Move (ROUNDALL(ttValor[iPointer],2))  to ttValor[iPointer]
    	            
    	        SQL_FIND_END hStmt_moeda 
                
    	        Move "SELECT B.SIGLA,SUM(A.AMOUNT) FROM DBO.HCGS3007 A" to sQuery
    	        Move (sQuery*"LEFT JOIN DBO.CCGS218 B ON A.MOEDA_ID=B.CODIGO") to sQuery
    	        Move (sQuery*"WHERE a.PROPOSTA_ID=%1 AND a.TAXA_CLASSE = 'F'") to sQuery
    	        Move (sQuery*"GROUP BY b.SIGLA") to sQuery
    	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery

    	        SQL_FIND_BEGIN hStmt_moeda sQuery
    	            
    	            Move (SizeOfArray(ttComissaoSigla)) to iPointer
    	            Move (Trim(SqlFindValue(hStmt_moeda,1))) to ttComissaoSigla[iPointer]
    	            Move      (SqlFindValue(hStmt_moeda,2))  to ttComissaoValor[iPointer]
    	            Move (ROUNDALL(ttComissaoValor[iPointer],2))  to ttComissaoValor[iPointer]
    	            
    	        SQL_FIND_END hStmt_moeda
    	        
    	        For iPointer from 0 to (SizeOfArray(ttSigla)-1)
    	        
    	            For iPointer2 from 0 to (SizeOfArray(ttComissaoSigla)-1)
    	                
    	                If (ttSigla[iPointer] = ttComissaoSigla[iPointer2]) Begin
    	                    Move (ttComissaoValor[iPointer2]+ttValor[iPointer]) to ttValor[iPointer]    
                        End
    	                
    	            Loop
    	            
    	            If (HCGS3004.CCGS202_ID = "AIR");    	            
    	                Move (sValue+If(sValue<>'', ' AND ', '')+FormatNumber(ttValor[iPointer],2)*ttSigla[iPointer]) to sValue
    	            Else;    
    	                Move (sValue+If(sValue<>'', ' AND ', '')+ttSigla[iPointer]*FormatNumber(ttValor[iPointer],2)) to sValue
    	                	            
    	        Loop // END FRETE CALCULO TOTAL 
            End
            Else Begin
                Move "SOB CONSULTA" to sValue
            End
            
            Get psReportId to sReportId
            Get ParameterIdByName sReportId "TotalFrete" to iParameter
            Set psParameterValue sReportId iParameter to sValue

            //-- DESTINO
            Move '' to sValue
            Move '' to sSiglaMoeda
            Move 0  to nValueMoeda
            Move (ResizeArray(ttComissaoSigla,0)) to ttComissaoSigla
            Move (ResizeArray(ttComissaoValor,0)) to ttComissaoValor
            Move (ResizeArray(ttSigla,0)) to ttSigla
            Move (ResizeArray(ttValor,0)) to ttValor

            //VERIFICA SE HA TAXAS SOB CONSULTA
            Move "SELECT RECNUM FROM DBO.HCGS3006" to sQuery
	        Move (sQuery*"WHERE PROPOSTA_ID=%1") to sQuery
	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery
	        
            Move (sQuery*"AND TAXA_CLASSES = 'D'") to sQuery
	        Move (sQuery*"AND STATUS='1' AND VL_VENDA=-1") to sQuery
	        
	        Move False to bSobConsulta


	        SQL_FIND_BEGIN hStmt_moeda sQuery
	            Move True to bSobConsulta
	        SQL_FIND_END hStmt_moeda 
            
            If (not(bSobConsulta)) Begin
                Move "SELECT b.SIGLA,SUM(a.VL_AMOUNT) FROM DBO.HCGS3006 a, dbo.CCGS218 b" to sQuery
    	        Move (sQuery*"WHERE a.PROPOSTA_ID=%1") to sQuery
    	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery
    	        
    	        Move (sQuery*"AND a.TAXA_CLASSES = 'D' ") to sQuery
    	        Move (sQuery*"AND b.CODIGO=a.MOEDA_VENDA AND a.STATUS='1' GROUP BY b.SIGLA") to sQuery

    	        SQL_FIND_BEGIN hStmt_moeda sQuery
    	            Move (SizeOfArray(ttSigla)) to iPointer
    	            Move (Trim(SqlFindValue(hStmt_moeda,1))) to ttSigla[iPointer]
    	            Move      (SqlFindValue(hStmt_moeda,2))  to ttValor[iPointer]
    	            Move (ROUNDALL(ttValor[iPointer],2))  to ttValor[iPointer]
    	        SQL_FIND_END hStmt_moeda
                
    	        Move "SELECT B.SIGLA,SUM(A.AMOUNT) FROM DBO.HCGS3007 A" to sQuery
    	        Move (sQuery*"LEFT JOIN DBO.CCGS218 B ON A.MOEDA_ID=B.CODIGO") to sQuery
                Move (sQuery*"WHERE a.PROPOSTA_ID=%1") to sQuery
    	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery
    	        
    	        Move (sQuery*"AND a.TAXA_CLASSE = 'D'") to sQuery
    	        
    	        Move (sQuery*"GROUP BY b.SIGLA") to sQuery

    	        SQL_FIND_BEGIN hStmt_moeda sQuery
    	            
    	            Move (SizeOfArray(ttComissaoSigla)) to iPointer
    	            Move (Trim(SqlFindValue(hStmt_moeda,1))) to ttComissaoSigla[iPointer]
    	            Move      (SqlFindValue(hStmt_moeda,2))  to ttComissaoValor[iPointer]
    	            Move (ROUNDALL(ttComissaoValor[iPointer],2))  to ttComissaoValor[iPointer]
    	            
    	        SQL_FIND_END hStmt_moeda
    	        
    	        For iPointer from 0 to (SizeOfArray(ttSigla)-1)
    	        
    	            For iPointer2 from 0 to (SizeOfArray(ttComissaoSigla)-1)
    	                
    	                If (ttSigla[iPointer] = ttComissaoSigla[iPointer2]) Begin
    	                    Move (ttComissaoValor[iPointer2]+ttValor[iPointer]) to ttValor[iPointer]    
                        End
    	                
    	            Loop
    	            
    	            If (HCGS3004.CCGS202_ID = 'AIR');
    	                Move (sValue+If(sValue<>'', ' AND ', '')+FormatNumber(ttValor[iPointer],2)*ttSigla[iPointer]) to sValue
    	            Else;
    	                Move (sValue+If(sValue<>'', ' AND ', '')+ttSigla[iPointer]*FormatNumber(ttValor[iPointer],2)) to sValue
    	            
    	        Loop // END DESTINO CALCULO TOTAL 
            End
            Else Begin
                Move "SOB CONSULTA" to sValue
            End
	        
            Get psReportId to sReportId
            Get ParameterIdByName sReportId "TotalDestino" to iParameter
            Set psParameterValue sReportId iParameter to sValue

            //-- TOTAL
            Move '' to sValue
            Move '' to sClasse
            Move '' to sSiglaMoeda
            Move '' to sSiglaMoeda_Anterior
            Move 0  to nValueMoeda
            Move 0  to nTotalMoeda
            
            Move (ResizeArray(ttComissaoSigla,0)) to ttComissaoSigla
            Move (ResizeArray(ttComissaoValor,0)) to ttComissaoValor
            Move (ResizeArray(ttSigla,0)) to ttSigla
            Move (ResizeArray(ttValor,0)) to ttValor
            
            //VERIFICA SE HA TAXAS SOB CONSULTA
            Move "SELECT RECNUM FROM DBO.HCGS3006" to sQuery
	        Move (sQuery*"WHERE PROPOSTA_ID=%1") to sQuery
	        Move (sQuery*"AND STATUS='1' AND VL_VENDA=-1") to sQuery
	        Move (SFormat(sQuery, HCGS3004.PROPOSTA)) to sQuery
	        Move False to bSobConsulta

	        SQL_FIND_BEGIN hStmt_moeda sQuery
	            Move True to bSobConsulta
	        SQL_FIND_END hStmt_moeda 
            
            If (not(bSobConsulta)) Begin
                
                Move "SELECT b.SIGLA,SUM(a.VL_AMOUNT) FROM DBO.HCGS3006 a, dbo.CCGS218 b"       to sQuery
    	        Move (sQuery*"WHERE a.PROPOSTA_ID=%1 AND a.TAXA_CLASSES IN (%2) ")              to sQuery
    	        Move (sQuery*"AND b.CODIGO=a.MOEDA_VENDA AND a.STATUS='1' GROUP BY b.SIGLA")    to sQuery
                
                //--Classe ORIGEM/INLAND
                If ('FOB|CFR|CIF|EXW|FCA|CIP|CPT|DDP|DAP' contains HCGS3004.CCGS223_ID) Begin
                    If (HCGS3004.CCGS202_ID = 'AIR') Begin
                         Move (sClasse+If(sClasse<>"","','","")+"O") to sClasse
                         Move (sClasse+If(sClasse<>"","','","")+"I") to sClasse
                    End
                    Else Move (sClasse+If(sClasse<>"","','","")+"O") to sClasse
                End
                //--Classe FRETE
                If ('FOB|CFR|CIF|EXW|FCA|CIP|CPT|DDP|DAP' contains HCGS3004.CCGS223_ID) Move (sClasse+If(sClasse<>"","','","")+"F") to sClasse
                //--Classe DESTINO
    	        If ('FOB|CFR|CIF|EXW|FCA|CIP|CPT|DDP|DAP' contains HCGS3004.CCGS223_ID) Move (sClasse+If(sClasse<>"","','","")+"D") to sClasse
    	        //--Classe ESPECIAL
    	        If ('FOB|CFR|CIF|EXW|FCA|CIP|CPT|DDP|DAP' contains HCGS3004.CCGS223_ID) Move (sClasse+If(sClasse<>"","','","")+"S") to sClasse
    	        Move (SFormat(sQuery, HCGS3004.PROPOSTA, ("'"+sClasse+"'"))) to sQuery

    	        SQL_FIND_BEGIN hStmt_moeda sQuery
	            
    	            Move (SizeOfArray(ttSigla)) to iPointer
    	            Move (Trim(SqlFindValue(hStmt_moeda,1))) to ttSigla[iPointer]
    	            Move      (SqlFindValue(hStmt_moeda,2))  to ttValor[iPointer]
    	            Move (ROUNDALL(ttValor[iPointer],2))  to ttValor[iPointer]
	            
    	        SQL_FIND_END hStmt_moeda
    	        
    	        Move "SELECT B.SIGLA,SUM(A.AMOUNT) FROM DBO.HCGS3007 A" to sQuery
    	        Move (sQuery*"LEFT JOIN DBO.CCGS218 B ON A.MOEDA_ID=B.CODIGO") to sQuery
    	        Move (sQuery*"WHERE a.PROPOSTA_ID=%1 AND a.TAXA_CLASSE IN (%2)") to sQuery
    	        Move (sQuery*"GROUP BY b.SIGLA") to sQuery
    	        
    	        Move (SFormat(sQuery, HCGS3004.PROPOSTA, ("'"+sClasse+"'"))) to sQuery

    	        SQL_FIND_BEGIN hStmt_moeda sQuery
    	            
    	            Move (SizeOfArray(ttComissaoSigla)) to iPointer
    	            Move (Trim(SqlFindValue(hStmt_moeda,1))) to ttComissaoSigla[iPointer]
    	            Move      (SqlFindValue(hStmt_moeda,2))  to ttComissaoValor[iPointer]
    	            Move (ROUNDALL(ttComissaoValor[iPointer],2))  to ttComissaoValor[iPointer]
    	            
    	        SQL_FIND_END hStmt_moeda
    	        
    	        For iPointer from 0 to (SizeOfArray(ttSigla)-1)
    	        
    	            For iPointer2 from 0 to (SizeOfArray(ttComissaoSigla)-1)
    	                
    	                If (ttSigla[iPointer] = ttComissaoSigla[iPointer2]) Begin
    	                    Move (ttComissaoValor[iPointer2]+ttValor[iPointer]) to ttValor[iPointer]    
                        End
    	                
    	            Loop
    	            
    	            If (HCGS3004.CCGS202_ID = 'AIR');
    	                Move (sValue+If(sValue<>'', ' AND ', '')+FormatNumber(ttValor[iPointer],2)*ttSigla[iPointer]) to sValue
    	            Else; 
    	                Move (sValue+If(sValue<>'', ' AND ', '')+ttSigla[iPointer]*FormatNumber(ttValor[iPointer],2)) to sValue
    	            
    	        Loop // END CALCULO TOTAL 
            End
	        Else Begin
                Move "SOB CONSULTA" to sValue
            End
	        
            Get psReportId to sReportId
            Get ParameterIdByName sReportId "Total" to iParameter
            Set psParameterValue sReportId iParameter to sValue            

        End_Procedure //SetParameters


        Procedure SetFilters
            String sReportId
            String sHCGS3004PROPOSTA

            Get psReportId to sReportId

            // Remove all the defined filters from the report
            Send RemoveAllFilters sReportId
            Get piProposta to sHCGS3004PROPOSTA

            If (sHCGS3004PROPOSTA <> "") Begin
                Send AddFilter sReportId "{HCGS3004.PROPOSTA_ID}" C_drEqual sHCGS3004PROPOSTA
            End
        End_Procedure //SetFilters
        
        // This method will be called once for the main report and once per sub-report
        // at each level of sub-reports.
        // The iSibling parameter contains the N-th sub-report at the same level. If the
        // value equals to -1 it means the main report.
        // The iLevel parameter contains the depth of sub-report nestings. For a sub-report
        // in a main report the value will be 1 and a sub-report of a sub-report makes it 2.
        Procedure LoadRDSData String sReportId Integer iSibling Integer iLevel
            Variant[][] vData
            Integer iElements iElement iSubReports iSubReport
            tDRTableName[] ReportTableNames
            String sSubReportId

            Get RDSTableNames sReportId to ReportTableNames
            Move (SizeOfArray (ReportTableNames)) to iElements
            If (iElements > 0) Begin
                Decrement iElements
                For iElement from 0 to iElements
                    Get AddRDSData ReportTableNames[iElement].sTableName iSibling iLevel to vData
                    Send TableData sReportId ReportTableNames[iElement].iTable vData
                Loop
            End

            Get SubReportCount sReportId to iSubReports
            If (iSubReports > 0) Begin
                Decrement iSubReports
                For iSubReport from 0 to iSubReports
                    Get SubReportId sReportId iSubReport to sSubReportId
                    Send LoadRDSData sSubReportId iSubReport (iLevel + 1)
                Loop
            End
        End_Procedure //LoadRDSData
        // Note: The Runtime DataSource row will be rejected if:
        // 1: The number of elements in the 2nd dimension does not match with the row layout
        // 2: The data-type of any element in the 2nd dimension does not match, cannot be
        //    converted to the data-type defined in the row layout. For example: A zero date
        //    
        Function AddRDSData String sTableName Integer iSibling Integer iLevel Returns Variant[][]
            Variant[][] vData
            
            Integer   iRow
            Integer   iX
            Integer   iCommaPos
            Integer[] arrRemarks
            Integer   iDecPoint
            Integer   iRecnum
            Integer   iDecimalSep 
            Integer   iThousandSep
            
            String[] aStrRecnum
            String[] aUserPermited
            String   sAuxsUsers
            String   sHCGS3004PROPOSTA
            String   sQuery
            String   sClasse
            String   sRemarks
            String   sVal0
            String   arrVia
            String   sCarrier
            String   sUN1
            String   sUN2
            String   sAuxTaxes
            String   sValores
            String   sData_criacao
            String   sModalidadeFrete
            String   sRecnumVia //Primeira Linha
            String   sRecnumFreq //Segunda Linha
            String   sCompondoRota
            String   sTipoMercadoria
            String   sEspecAddCarga
            String   sCntrs sCntr sCntr_One
            String   sAuxxxx
            String   sAuxAutenticaCNTR 
            String   sAuxSeguro
            String   aRecnumComissao 
            String   sTipoComissao 
            String   sTipoTaxa 
            String   sTiposFixos
            String   sNovaClasse
            String   sTaxasFclBuscaComissao
            String   sAuxContainer
            String   sTipoCalc
            String   sNetShipNumCotacao
            String[] aComissaoParaMesmaLinha
            String[] sArray
            
            Boolean bAbaixoDeUm 
            Boolean bTaxaRepetida
            Boolean bError
            Boolean bIsSame
            Boolean bSEA
            Boolean bAIR
            Boolean bFound
            Boolean bSobConsulta
            Boolean b20 
            Boolean b40
            Boolean bComissao
            
            Number  nNumero
            Number  nVal0 
            Number  nVal1
            Number  nTTPeso
            Number  nTTVolume
            Number  nPesoCubado
            Number  nAmount
            Number  nMin
            Number  nMax
            Number  nSoma
            Number  nWgt_Taxavel             
            Number nAuxPeso
            Number nValorSeguro
            Number sAuxNumbers
            

            Handle hoSQL
            Handle hoDBC
            Handle hoStmt
            Handle hoMngr
            Handle hoDD
            
            Integer iIndex
            Integer iRows
            Integer iRowCount
            
            String[][] aFetchedValues
            
                    
            Get piProposta to sHCGS3004PROPOSTA
            Move False to bSobConsulta
            Move 0 to iRow

            Clear CSAG311
            Move (psUsuarioSessao(Self)) to CSAG311.USUARIOSESSAO
            Find Eq CSAG311 by 1
            If (not(Found)) Function_Return vData

            Clear HCGS3004
            Move sHCGS3004PROPOSTA to HCGS3004.PROPOSTA
            Find Eq HCGS3004 by 1
            If (not(Found)) Function_Return vData
            
            Move (Rtrim(HCGS3004.CCGS202_ID)) to sModalidadeFrete
            Move HCGS3004.TAX_SPECIAL_SEGURO_VALOR to nValorSeguro

            Case Begin
                Case (iSibling = -1 and iLevel = 0 and sTableName = "HCGS3004")
                // ToDo:RDS array for the table HCGS3004
                // The first dimension identifies the row, the second dimension identifies the column.
                    Move 0 to iRow
                    Clear HCGS3004
                    Move sHCGS3004PROPOSTA to HCGS3004.PROPOSTA
                    Find Eq HCGS3004 by 1
                    If (Found) Begin
                     // Verificando o n mero da SI. Conforme feature 1593
                        Clear HCGS3008
                        Move sHCGS3004PROPOSTA to HCGS3008.PROPOSTA_ID
                        Find eq HCGS3008 by 2
                        If (Found) Move (Trim(HCGS3008.NETSHIP_NUMCOTACAO)) to sNetShipNumCotacao
                        Else Move "" to sNetShipNumCotacao
                        Move       sNetShipNumCotacao               to vData[iRow][63] // Name: NETSHIP_NUMCOTACAO, Length: 25, Datatype: String
                        
                    //-- HCGS3004
                        Get Create (RefClass(DataDictionary)) to hoDD
                        Set Main_File of hoDD to HCGS3004.File_Number
                        Send DefineAllExtendedFields of hoDD
                        Send Request_Assign of hoDD HCGS3004.File_Number
                        
                        Move       HCGS3004.PROPOSTA                to vData[iRow][0] // Name: PROPOSTA_ID, Length: 10, Datatype: Integer
                        Move       HCGS3004.PROPOSTA_DATA           to vData[iRow][1] // Name: PROPOSTA_DATA, Length: 10, Datatype: Date
                        Move (Trim(HCGS3004.PROPOSTA_VERSAO))       to vData[iRow][2] // Name: PROPOSTA_VERSAO, Length: 20, Datatype: String
                        Move       HCGS3004.CSAG320_ID              to vData[iRow][3] // Name: CLIENTE_ID, Length: 10, Datatype: Integer
                        
                    //-- Lucas Leal 01.09.2016 - 05:48 PM
                    //-- Sugiro no HEAD colocar a Razao social do cliente ao inv s da Fantasia.
                        Move (Trim(HCGS3004.CSAG320_FANTASIA))      to vData[iRow][4] // Name: CLIENTE_FANTASIA, Length: 100, Datatype: String
                        Clear CSAG320
                        Move HCGS3004.CSAG320_ID to CSAG320.CODIGO
                        Find Eq CSAG320 by 1
                        If (Found);
                            Move (Trim(CSAG320.NOME))               to vData[iRow][4] // Name: CLIENTE_FANTASIA, Length: 100, Datatype: String
                        
                        //Referencia do Cliente
                        Move ('') to vData[iRow][5] // Name: REFERENCIA_CLIENTE, Length: 64, Datatype: String
                        Move "SELECT OBSERVACAO FROM DBO.CCGS250 where PROPOSTA_ID=%1 and REFERENCIA_ID=1" to sQuery
                        Move (SFormat(sQuery,HCGS3004.PROPOSTA)) to sQuery
                        SQL_FIND_BEGIN hStmt_pessoa sQuery
    			            Move (Trim(SqlFindValue(hStmt_pessoa,1))) to vData[iRow][5]
    			        SQL_FIND_END hStmt_pessoa
//                        Move (Trim(HCGS3004.CUSTOMER_REFERENCE))    to vData[iRow][5] // Name: REFERENCIA_CLIENTE, Length: 64, Datatype: String

                        Move (Trim(HCGS3004.MERCADORIA))            to vData[iRow][6] // Name: MERCADORIA, Length: 200, Datatype: String
                    //-- Vendedor
                        Move '' to vData[iRow][7]  // Name: VENDEDOR_DS, Length: 100, Datatype: String
                        Move '' to vData[iRow][8]  // Name: VENDEDOR_EMAIL, Length: 100, Datatype: String
                        Move '' to vData[iRow][9]  // Name: VENDEDOR_CELPHONE, Length: 20, Datatype: String
                        Move '' to vData[iRow][10] // Name: VENDEDOR_OFFICEPHONE, Length: 20, Datatype: String
                        Move '' to sQUERY

                        Get Find_Code_Description of oCSAG367_FVT 'RV_PROPFREIGHT_01' to sQuery
    			        Move (SFormat(sQuery, HCGS3004.CSAG341_ID)) to sQuery

    			        SQL_FIND_BEGIN hStmt_pessoa sQuery
    			            Move (Trim(SqlFindValue(hStmt_pessoa,1))) to vData[iRow][7]
    			            Move (Trim(SqlFindValue(hStmt_pessoa,2))) to vData[iRow][8]
    			            Move (Trim(SqlFindValue(hStmt_pessoa,3))) to vData[iRow][9]
    			        SQL_FIND_END hStmt_pessoa
    			        
    			        If (vData[iRow][7]='') Begin
                            Clear CSAG320
                            Move HCGS3004.CSAG341_ID to CSAG320.CODIGO
                            Find Eq CSAG320 by 1
                            If (Found) Begin
                                Move (Trim(CSAG320.FANTASIA)) to vData[iRow][7]  // Name: VENDEDOR_DS, Length: 100, Datatype: String
                            End
                        End
    			        
    			        Clear CSAG308
    			        Move HCGS3004.CSAG308_ID to CSAG308.CLIENTENUMERO
                        Find Eq CSAG308 by 1    			                         
                        If (Found and CSAG308.TELEFONE_NUMERO > 0);
                            Move ('('+Trim(CSAG308.TELEFONE_DDD)+')'*Trim(CSAG308.TELEFONE_NUMERO)) to vData[iRow][10]

                        Move (Trim(CSAG308.CLIENTEFANTASIA)) to vData[iRow][11] // Name: MARCA_DS, Length: 100, Datatype: String
                        
                        Set Field_Changed_Value of hoDD Field HCGS3004.DTHR_PRINTED to (CurrentDateTime())
                        Set Field_Changed_Value of hoDD Field HCGS3004.USER_PRINTED to CSAG311.USUARIONUMERO
                        Get Request_Validate of hoDD to bError
                        If (not(bError)) Begin
                            Send Request_Save of hoDD
                            Send Refind_Records of hoDD
                        End
                        Move HCGS3004.DTHR_PRINTED          to vData[iRow][12] // Name: DTHR_PRINTED, Length: 23, Datatype: DateTime
                        Move HCGS3004.USER_PRINTED          to vData[iRow][13] // Name: USER_PRINTED, Length: 10, Datatype: Integer
                        Move (Trim(CSAG311.USUARIONOME))    to vData[iRow][14] // Name: USER_PRINTED_NM, Length: 100, Datatype: String
                        Move HCGS3004.VALIDADE_INICIO       to vData[iRow][15] // Name: VALIDADE_INICIO, Length: 10, Datatype: Date
                        Move HCGS3004.VALIDADE_TERMINO      to vData[iRow][16] // Name: VALIDADE_TERMINO, Length: 10, Datatype: Date
                        
                        Move HCGS3004.STATUS                to vData[iRow][17] // Name: STATUS, Length: 1, Datatype: String
                        
                        Get Find_Code_Description of oSTATUS_PROP_VT HCGS3004.STATUS to vData[iRow][18] // Name: STATUS_DS, Length: 100, Datatype: String
                        
                        Move '' to vData[iRow][19] // Name: PRODUTOS_DS, Length: 1020, Datatype: Text
                        If (HCGS3004.CCGS210_ID<>'') Begin
                            Get Find_Code_Description of oCSAG367_FVT 'RV_PROPFREIGHT_02' to sQuery
        			        Move (SFormat(sQuery, Trim(HCGS3004.CCGS210_ID))) to sQuery

        			        SQL_FIND_BEGIN hStmt_produtos sQuery
        			            Move (If(vData[iRow][19]<>'',', ','')+Trim(SqlFindValue(hStmt_produtos,1))) to vData[iRow][19]
        			        SQL_FIND_END hStmt_produtos 
                        End
                        Move (Trim(HCGS3004.CCGS202_ID))    to vData[iRow][20] // Name: MODAL_FREIGHT, Length: 30, Datatype: String
                    //INCOTERM AND 
                        Move (Trim(HCGS3004.CCGS223_ID))    to vData[iRow][21] // Name: INCOTERM, Length: 3, Datatype: String
                        
                        Move (Trim(HCGS3004.CSAG329_POL))   to vData[iRow][22] // Name: PAIS_POL, Length: 3, Datatype: String
                        Move (Trim(HCGS3004.CSAG329_POD))   to vData[iRow][23] // Name: PAIS_POD, Length: 3, Datatype: String
                    //--POL
                        Move '' to vData[iRow][24] // Name: POL_DS, Length: 2048, Datatype: Text
                        If (HCGS3004.CSAG325_POL<> '') Begin
                            Get Find_Code_Description of oCSAG367_FVT 'RV_PROPFREIGHT_03' to sQuery
        			        Move (SFormat(sQuery, Trim(HCGS3004.CSAG325_POL))) to sQuery

        			        SQL_FIND_BEGIN hStmt_pol sQuery
        			            Move (If(vData[iRow][24]<>'',(vData[iRow][24]+', '),'')+Trim(SqlFindValue(hStmt_pol,1))+'-'+Trim(SqlFindValue(hStmt_pol,2))) to vData[iRow][24]
        			        SQL_FIND_END hStmt_pol
                        End
                    //--POD
                        Move '' to vData[iRow][25] // Name: POD_DS, Length: 2048, Datatype: Text
                        If (HCGS3004.CSAG325_POD<> '') Begin
                            Get Find_Code_Description of oCSAG367_FVT 'RV_PROPFREIGHT_03' to sQuery
        			        Move (SFormat(sQuery, Trim(HCGS3004.CSAG325_POD))) to sQuery

        			        SQL_FIND_BEGIN hStmt_pod sQuery
        			            Move (If(vData[iRow][25]<>'',(vData[iRow][25]+', '),'')+Trim(SqlFindValue(hStmt_pod,1))+'-'+Trim(SqlFindValue(hStmt_pod,2))) to vData[iRow][25]
        			        SQL_FIND_END hStmt_pod 
                        End
                    //--CARACT. FRETE
                        Move (Trim(HCGS3004.CCGS203_ID)) to vData[iRow][26] // Name: CARACT_FREIGHT, Length: 100, Datatype: String
                        Move '' to vData[iRow][28] // Name: DETAIL_FREIGHT, Length: 1024, Datatype: Text
                        Move (SFormat("SELECT RECNUM FROM DBO.HCGS3005 WHERE IMO = 1 AND PROPOSTA_ID=%1",HCGS3004.PROPOSTA)) to sQuery

                        SQL_FIND_BEGIN hStmt_caract sQuery
                            If (vData[iRow][28] = '') Move (Trim('IMO')) to vData[iRow][28]
                            Else Move (vData[iRow][28]*'/'*Trim('IMO')) to vData[iRow][28]
                        SQL_FIND_END hStmt_caract
                        Move (SFormat("SELECT RECNUM FROM DBO.HCGS3005 WHERE N_EMPILHAVEL = 1 AND PROPOSTA_ID=%1",HCGS3004.PROPOSTA)) to sQuery

                        SQL_FIND_BEGIN hStmt_caract sQuery
                            If (vData[iRow][28] = '') Move (Trim('NAO EMPILHAVEL')) to vData[iRow][28]
                            Else Move (vData[iRow][28]*'/'*Trim('NAO EMPILHAVEL')) to vData[iRow][28]
                        SQL_FIND_END hStmt_caract
                        If (vData[iRow][28] = '') Move "FAK" to vData[iRow][28]
                    //--CARACT_EMBARQUE
                        Move '' to vData[iRow][27] // Name: CARACT_EMBARQUE, Length: 100, Datatype: String
                        If (HCGS3004.CCGS204_ID<> '') Begin
                            Get Find_Code_Description of oCSAG367_FVT 'RV_PROPFREIGHT_05' to sQuery
        			        Move (SFormat(sQuery, Trim(HCGS3004.CCGS204_ID))) to sQuery

        			        SQL_FIND_BEGIN hStmt_caracemba sQuery
        			            Move (If(vData[iRow][27]<>'',(vData[iRow][27]+', '),'')+Trim(SqlFindValue(hStmt_caracemba,1))) to vData[iRow][27]
        			        SQL_FIND_END hStmt_caracemba 
                        End
                    //--CARRIER
                        Move (Trim(HCGS3004.CARRIER_ID)) to vData[iRow][29] // Name: CARRIER_ID, Length: 100, Datatype: String
                        Move '' to vData[iRow][30] // Name: CARRIER_DS, Length: 2048, Datatype: Text
                        
                        Clear CSAG320
                        Move HCGS3004.CARRIER_ID to CSAG320.CODIGO
                        Find EQ CSAG320 by 1
                        If (Found) Move (Trim(CSAG320.FANTASIA)) to vData[iRow][30]
                        
                        Move '' to vData[iRow][53] // Name: FREQUENCIA, Length: 250
                        Move '' to vData[iRow][55] // Name: TRANSIT_TIME, Length: 250
                        Move '' to vData[iRow][58] // Name: CSAG325_VIA, Length: 250
                        Move '' to vData[iRow][60] // Name: ROTA_DESCRICAO, Length: 250
                        Move '' to vData[iRow][61] // Name: FREQ2, Length: 25
                        Move '' to vData[iRow][62] // Name: TRANSITTIME2, Length: 25
                        
                        If (HCGS3004.ROTA = 'OF') Begin
                            Move "SELECT TOP 1 RECNUM FROM DBO.HCGS3006 WHERE PROPOSTA_ID = %1 AND TAXA_CLASSES = 'F' AND TAXA_ID = 9 " to sQuery
                            Move (SFormat(sQuery,HCGS3004.PROPOSTA)) to sQuery

                            SQL_FIND_BEGIN hStmt_search sQuery
                                Move (SqlFindValue(hStmt_search,1)) to sRecnumVia
                            SQL_FIND_END hStmt_search
                        End
                        Else Begin
                            If (HCGS3004.ROTA = 'DTA,OF') Begin
                                Move "SELECT TOP 1 RECNUM FROM DBO.HCGS3006 WHERE PROPOSTA_ID = %1 AND TAXA_CLASSES = 'F' AND TAXA_ID = 42 " to sQuery
                                Move (SFormat(sQuery,HCGS3004.PROPOSTA)) to sQuery

                                SQL_FIND_BEGIN hStmt_search sQuery
                                    Move (SqlFindValue(hStmt_search,1)) to sRecnumVia
                                SQL_FIND_END hStmt_search    
                                
                                Move "SELECT TOP 1 RECNUM FROM DBO.HCGS3006 WHERE PROPOSTA_ID = %1 AND TAXA_CLASSES = 'F' AND TAXA_ID = 9 " to sQuery
                                Move (SFormat(sQuery,HCGS3004.PROPOSTA)) to sQuery

                                SQL_FIND_BEGIN hStmt_search sQuery
                                    Move (SqlFindValue(hStmt_search,1)) to sRecnumFreq
                                SQL_FIND_END hStmt_search
                            End
                            Else If (HCGS3004.ROTA = 'OF,DTA') Begin
                                Move "SELECT TOP 1 RECNUM FROM DBO.HCGS3006 WHERE PROPOSTA_ID = %1 AND TAXA_CLASSES = 'F' AND TAXA_ID = 9 " to sQuery
                                Move (SFormat(sQuery,HCGS3004.PROPOSTA)) to sQuery

                                SQL_FIND_BEGIN hStmt_search sQuery
                                    Move (SqlFindValue(hStmt_search,1)) to sRecnumVia
                                SQL_FIND_END hStmt_search
                                
                                Move "SELECT TOP 1 RECNUM FROM DBO.HCGS3006 WHERE PROPOSTA_ID = %1 AND TAXA_CLASSES = 'F' AND TAXA_ID = 42 " to sQuery
                                Move (SFormat(sQuery,HCGS3004.PROPOSTA)) to sQuery

                                SQL_FIND_BEGIN hStmt_search sQuery
                                    Move (SqlFindValue(hStmt_search,1)) to sRecnumFreq
                                SQL_FIND_END hStmt_search
                            
                            End
                        End
                        //FREQUENCIA SERA USADO PARA COMPOR A ROTA DE DTA + FREQ + TT --Linha 1
                        If (sRecnumVia <> '') Begin
                            If (HCGS3004.CCGS202_ID = 'LCL') Begin
                                Get Find_Code_Description of oCSAG367_FVT 'RV_PROPFREIGHT_10' to sQuery
                                Move (SFormat(sQuery,sRecnumVia)) to sQuery

                                SQL_FIND_BEGIN hStmt_search sQuery
                                    Move (Trim(SqlFindValue(hStmt_search,1))) to sCompondoRota
                                    Move (sCompondoRota*'('+Trim(SqlFindValue(hStmt_search,2))+')') to sCompondoRota
                                    If (Trim(SqlFindValue(hStmt_search,3)) <> '') Begin
                                        Move (sCompondoRota*'->'*Trim(SqlFindValue(hStmt_search,3))) to sCompondoRota
                                        Move (sCompondoRota*'('+Trim(SqlFindValue(hStmt_search,4))+')') to sCompondoRota
                                    End
                                    Move (sCompondoRota*'->'*Trim(SqlFindValue(hStmt_search,5))) to sCompondoRota
                                    Move (sCompondoRota*'('+Trim(SqlFindValue(hStmt_search,6))+')') to sCompondoRota
                                    
                                    Move (Trim(SqlFindValue(hStmt_search,7))) to vData[iRow][61] // Name: FREQ2, Length: 25
                                    Move (Trim(SqlFindValue(hStmt_search,8))*'dias') to vData[iRow][62] // Name: TRANSITTIME2, Length: 25
                                    
                                SQL_FIND_END hStmt_search 
                                Move sCompondoRota to vData[iRow][60] // Name: ROTA_DESCRICAO, Length: 250
                            End
                        End
                        
                        
                        Move (Trim(HCGS3004.FREETIME)) to vData[iRow][54] // Name: FREETIME, Length: 25, Datatype: String
                        Move '' to vData[iRow][55] // Name: TRANSIT_TIME, Length: 25, Datatype: String
                        
                        //VIA SERA USADO PARA COMPOR A ROTA DE FRETE + FREQ + TT --Linha 2
                        If (sRecnumFreq <> '' and HCGS3004.CCGS202_ID = 'LCL') Begin
                            Get Find_Code_Description of oCSAG367_FVT 'RV_PROPFREIGHT_10' to sQuery
                            Move (SFormat(sQuery,sRecnumFreq)) to sQuery

                            SQL_FIND_BEGIN hStmt_search sQuery
                                Move (Trim(SqlFindValue(hStmt_search,1))) to sCompondoRota
                                Move (sCompondoRota*'('+Trim(SqlFindValue(hStmt_search,2))+')') to sCompondoRota
                                If (Trim(SqlFindValue(hStmt_search,3)) <> '') Begin
                                    Move (sCompondoRota*'->'*Trim(SqlFindValue(hStmt_search,3))) to sCompondoRota
                                    Move (sCompondoRota*'('+Trim(SqlFindValue(hStmt_search,4))+')') to sCompondoRota
                                End
                                Move (sCompondoRota*'->'*Trim(SqlFindValue(hStmt_search,5))) to sCompondoRota
                                Move (sCompondoRota*'('+Trim(SqlFindValue(hStmt_search,6))+')') to sCompondoRota
                                
                                Move (Trim(SqlFindValue(hStmt_search,7))) to vData[iRow][53] // Name: FREQUENCIA, Length: 250
                                Move (Trim(SqlFindValue(hStmt_search,8))*'dias') to vData[iRow][55] // Name: TRANSIT_TIME, Length: 250
                            
                            SQL_FIND_END hStmt_search
                            Move sCompondoRota to vData[iRow][58] // Name: CSAG325_VIA, Length: 250
                        End
                        
                        If (HCGS3004.CCGS202_ID = 'FCL') Begin
                            
                            Clear CCGS226
                            Move HCGS3004.FREQUENCIA to CCGS226.CODIGO
                            Find Eq CCGS226 by 1
                            Move (Trim(CCGS226.DESCRICAO))            to vData[iRow][61] // Name: FREQUENCIA, Length: 25, Datatype: String
                            Move (Trim(HCGS3004.FREETIME))            to vData[iRow][54] // Name: FREETIME, Length: 25, Datatype: String
                            Move (Trim(HCGS3004.TRANSITTIME)*"dias")  to vData[iRow][62] // Name: TRANSIT_TIME, Length: 25, Datatype: String
                            
                            Clear CSAG325
                            Move HCGS3004.CSAG325_VIA to CSAG325.CODIGO
                            Find eq CSAG325 by 1
                            If (Found) Move (Rtrim(CSAG325.DESCRICAO))  to vData[iRow][60] // Name: CSAG325_VIA, Length: 100, Datatype: String
                            Else Move ('DIRECT SERVICE')  to vData[iRow][60]

                        End
                        
                        Move (Trim(HCGS3004.CONTAINERS)) to vData[iRow][31] // Name: CONTAINERS, Length: 100, Datatype: String
                        
                    // MASCARA PARA DOOR [CIDADE DE ORIGEM]- [PAIS DOOR ORIGEM] - [ZIP DE ORIGEM] - [ENDERE O DE ORIGEM]
                    // ORIGEM/DESTINO_CIDADE_DS CONTER  A INFORMA  O COMPLETA.
                    //--PICKUP - ORIGEM
                        Move (Trim(HCGS3004.ORIGEM_PAIS))           to vData[iRow][32] // Name: ORIGEM_PAIS, Length: 3, Datatype: String
                        Move (Trim(HCGS3004.ORIGEM_CEP))            to vData[iRow][33] // Name: ORIGEM_CEP, Length: 12, Datatype: String
                        
                        Move '' to vData[iRow][35] // Name: ORIGEM_CIDADE_DS, Length: 100, Datatype: String
                        Clear CSAG325
                        Move HCGS3004.ORIGEM_CIDADE to CSAG325.CODIGO
                        Find eq CSAG325 by 1
                        
                        Move HCGS3004.ORIGEM_CIDADE                             to vData[iRow][34] // Name: ORIGEM_CIDADE, Length: 10, Datatype: Integer
                        Move (Trim(HCGS3004.ORIGEM_LOGRADOURO))                 to vData[iRow][36] // Name: ORIGEM_LOGRADOURO, Length: 200, Datatype: String
                        Move HCGS3004.ORIGEM_NUMERO                             to vData[iRow][37] // Name: ORIGEM_NUMERO, Length: 10, Datatype: Integer
                        Move (Trim(HCGS3004.ORIGEM_COMPLEMENTO))                to vData[iRow][38] // Name: ORIGEM_COMPLEMENTO, Length: 200, Datatype: String
                        
                        If (Found) Begin
                            Move (Trim(CSAG325.DESCRICAO)+'-'+Trim(CSAG325.PAIS))           to vData[iRow][35] // Name: ORIGEM_CIDADE_DS, Length: 100, Datatype: String
                            Move (vData[iRow][35]+'-'+Trim(HCGS3004.ORIGEM_CEP))            to vData[iRow][35] // Name: ORIGEM_CIDADE_DS, Length: 100, Datatype: String
                            Move (vData[iRow][35]+'-'+Trim(HCGS3004.ORIGEM_LOGRADOURO))     to vData[iRow][35] // Name: ORIGEM_CIDADE_DS, Length: 100, Datatype: String
                            Move (vData[iRow][35]+','+String(HCGS3004.ORIGEM_NUMERO))       to vData[iRow][35] // Name: ORIGEM_CIDADE_DS, Length: 100, Datatype: String
                            Move (vData[iRow][35]+','+Trim(HCGS3004.ORIGEM_COMPLEMENTO))    to vData[iRow][35] // Name: ORIGEM_CIDADE_DS, Length: 100, Datatype: String
                        End
                    //--PICKUP - DESTINO
                        Move (Trim(HCGS3004.DESTINO_PAIS))          to vData[iRow][39] // Name: DESTINO_PAIS, Length: 3, Datatype: String
                        Move (Trim(HCGS3004.DESTINO_CEP))           to vData[iRow][40] // Name: DESTINO_CEP, Length: 12, Datatype: String
                        
                        Move '' to vData[iRow][42] // Name: DESTINO_CIDADE_DS, Length: 100, Datatype: String
                        Clear CSAG325
                        Move HCGS3004.DESTINO_CIDADE to CSAG325.CODIGO
                        Find eq CSAG325 by 1
                        
                        Move HCGS3004.DESTINO_CIDADE                            to vData[iRow][41] // Name: DESTINO_CIDADE, Length: 10, Datatype: Integer
                        Move (Trim(HCGS3004.DESTINO_LOGRADOURO))                to vData[iRow][43] // Name: DESTINO_LOGRADOURO, Length: 200, Datatype: String
                        Move HCGS3004.DESTINO_NUMERO                            to vData[iRow][44] // Name: DESTINO_NUMERO, Length: 10, Datatype: Integer
                        Move (Trim(HCGS3004.DESTINO_COMPLEMENTO))               to vData[iRow][45] // Name: DESTINO_COMPLEMENTO, Length: 200, Datatype: String
                        
                        If (Found) Begin
                            Move (Trim(CSAG325.DESCRICAO)+'-'+Trim(CSAG325.PAIS))           to vData[iRow][42] // Name: DESTINO_CIDADE_DS, Length: 100, Datatype: String
                            Move (vData[iRow][42]+'-'+Trim(HCGS3004.DESTINO_CEP))           to vData[iRow][42] // Name: ORIGEM_CIDADE_DS, Length: 100, Datatype: String
                            Move (vData[iRow][42]+'-'+Trim(HCGS3004.DESTINO_LOGRADOURO))    to vData[iRow][42] // Name: ORIGEM_CIDADE_DS, Length: 100, Datatype: String
                            Move (vData[iRow][42]+','+String(HCGS3004.DESTINO_NUMERO))      to vData[iRow][42] // Name: ORIGEM_CIDADE_DS, Length: 100, Datatype: String
                            Move (vData[iRow][42]+','+Trim(HCGS3004.DESTINO_COMPLEMENTO))   to vData[iRow][42] // Name: ORIGEM_CIDADE_DS, Length: 100, Datatype: String
                        End                    
                    //--TERMINAL
                        Move '' to vData[iRow][46] // Name: TERMINAL_ORIGEM, Length: 100, Datatype: String
                        Move '' to vData[iRow][57] // Name: TERMINAL_DESTINO, Length: 100, Datatype: String

                        Clear CSAG320
                        Move HCGS3004.CSAG346_TERMINAL_ORIGEM to CSAG320.CODIGO
                        Find EQ CSAG320 by 1
                        If (Found) Move (Trim(CSAG320.FANTASIA)) to vData[iRow][46] // Name: TERMINAL_ORIGEM, Length: 100, Datatype: String
                        Else Move '-' to vData[iRow][46] // Name: TERMINAL_ORIGEM, Length: 100, Datatype: String
                        
                        Clear CSAG320
                        Move HCGS3004.CSAG346_TERMINAL_DESTINO to CSAG320.CODIGO
                        Find EQ CSAG320 by 1
                        If (Found) Move (Trim(CSAG320.FANTASIA)) to vData[iRow][57] // Name: TERMINAL_DESTINO, Length: 100, Datatype: String
                        Else Move '-' to vData[iRow][57] // Name: TERMINAL_DESTINO, Length: 100, Datatype: String

                    //--AGENTE
//                        Clear CSAG320
//                        Move HCGS3004.CSAG345_AGENTE to CSAG320.CODIGO
//                        Find Eq CSAG320 by 1
//                        Move HCGS3004.CSAG345_AGENTE        to vData[iRow][47] // Name: AGENTE, Length: 10, Datatype: Integer
//                        Move (Trim(CSAG320.FANTASIA))       to vData[iRow][48] // Name: AGENTE_NM, Length: 100, Datatype: String
                    //--CLIENTE FINAL
                        Move HCGS3004.CLIENTE_FINAL_ID      to vData[iRow][49] // Name: CLIENTE_FINAL_ID, Length: 14, Datatype: Number
                        Move (Trim(HCGS3004.CLIENTE_FINAL)) to vData[iRow][50] // Name: CLIENTE_FINAL_DS, Length: 100, Datatype: String
                    //--COMMENTS                        
                        Move (Trim(HCGS3004.CUSTOMER_INSTRUCTIONS))      to vData[iRow][51] // Name: COMMENTS, Length: 65536, Datatype: Text
                    //--REMARKS                        
                        Move '' to vData[iRow][52] // Name: REMARKS, Length: 65536, Datatype: Text
                        
                        If (Trim(HCGS3004.REMARKS)<>'') Begin
                            Move (ResizeArray(arrRemarks, 0)) to arrRemarks
                            Move (IntSplitToArray(Trim(HCGS3004.REMARKS), ',')) to arrRemarks
                            For iX from 0 to (SizeOfArray(arrRemarks)-1)
                                Clear HCGS3003
                                Move arrRemarks[iX] to HCGS3003.CODIGO
                                Find Eq HCGS3003 by 1
                                If (Found) Begin
                                    
                                    Move (sAuxxxx+(Character(13)+Character(10))) to sAuxxxx
                                    Move (sAuxxxx+(Character(13)+Character(10))) to sAuxxxx
                                    Move (sAuxxxx+(HCGS3003.REMARKS)) to sAuxxxx
                                    
                                End
                            Loop
                            Move sAuxxxx to vData[iRow][52]
                        End // REMARKS    
                        
                        //DATA EMISSAO
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=01) Move 'Jan' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=02) Move 'Fev' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=03) Move 'Mar' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=04) Move 'Abr' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=05) Move 'Mai' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=06) Move 'Jun' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=07) Move 'Jul' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=08) Move 'Ago' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=09) Move 'Set' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=10) Move 'Out' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=11) Move 'Nov' to sData_criacao
                        If (DateGetMonth(HCGS3004.DATE_TIME_C)=12) Move 'Dez' to sData_criacao
                        
                        Move (Trim(sData_criacao*String(DateGetDay(HCGS3004.DATE_TIME_C)))) to sData_criacao
                        Move (Trim(sData_criacao+','*String(DateGetYear(HCGS3004.DATE_TIME_C)))) to sData_criacao
                        Move (Trim(sData_criacao)) to vData[iRow][56] // Name: DATA_CRIACAO, Length: 25, Datatype: String
                        
                        If (HCGS3004.FREETIME_ARMADOR <> 0);
                            Move (Trim(HCGS3004.FREETIME_ARMADOR)*'dias') to vData[iRow][59] //FREE TIME ARMADOR
                        Else Move (Trim('Standard')) to vData[iRow][59] //FREE TIME ARMADOR
                        
                        If (HCGS3004.FREETIME <> 0);
                            Move (Trim(HCGS3004.FREETIME)*'dias') to vData[iRow][54] //FREE TIME 
                        Else Move (Trim('Standard')) to vData[iRow][54] //FREE TIME 
                    End
                Case Break
                Case (iSibling = 0 and iLevel = 1 and sTableName = "HSAG560")
                // ToDo:RDS array for the table HSAG560
                // The first dimension identifies the row, the second dimension identifies the column.
                    Move False to bFound
                    Move 0 to iRow
                    Move "SELECT H.PROPOSTA_ID"                                                                                   to sQuery
                    Move (sQuery*", P.DESCRICAO ")                                                                                to sQuery
                    Move (sQuery*", H.DESCRICAO")                                                                                 to sQuery
                    Move (sQuery*", H.NCM")                                                                                       to sQuery
                    Move (sQuery*", H.CLASS")                                                                                     to sQuery
                    Move (sQuery*", H.PKG")                                                                                       to sQuery
                    Move (sQuery*", H.SUBRISK")                                                                                   to sQuery
                    Move (sQuery*", H.UN")                                                                                        to sQuery
                    Move (sQuery*", D.RECNUM, H.NCM_DESC")                                                                        to sQuery
                    Move (sQuery*"FROM DBO.HSAG560 H")                                                                            to sQuery
                    Move (sQuery*"INNER JOIN DBO.HCGS3005 D ON (H.PROPOSTA_ID = D.PROPOSTA_ID AND H.HCGS3005_RECNUM = D.RECNUM)") to sQuery
                    Move (sQuery*"LEFT JOIN DBO.CCGS203 P ON (P.CODIGO=H.TP_CARGA)")                                              to sQuery
                    Move (sQuery*"WHERE H.PROPOSTA_ID = %1")                                                                      to sQuery
                    Move (SFormat(sQuery,sHCGS3004PROPOSTA))                                                                      to sQuery
                    //-
                    Move (ResizeArray(aFetchedValues,0)) to aFetchedValues
                    //-
                    Get Create (RefClass(cSQLHandleManager)) to hoMngr
                    Get SQLFileConnect of hoMngr HSAG560.File_number to hoDBC
                    If (hoDBC <> 0) Begin
                        Get SQLOpen of hoDBC to hoStmt
                        If (hoStmt <> 0) Begin
                            Send SQLExecDirect of hoStmt sQuery
                            Get SQLFetchResultsetValues of hoStmt to aFetchedValues
                        End
                        Send SQLCLose of hoStmt
                    End
                    Send SQLDisconnect of hoDBC
                
                    Send Destroy of hoMngr
                    //- load array
                    Move (SizeOfArray(aFetchedValues)) to iRows
                    For iRowCount from 0 to (iRows - 1)
                        Move (SizeOfArray(vData)) to iRow
                        
                        //- H.PROPOSTA_ID
                        Move (aFetchedValues[iRowCount][00])            to vData[iRow][1]  // Name: PROPOSTA_ID, Length: 12, Datatype: integer
                        //- P.DESCRICAO                                 
                        Move (aFetchedValues[iRowCount][01])            to vData[iRow][2]  // Name: MERCANCY, Length: 12, Datatype: String   
                        //- H.NCM_DESC | H.DESCRICAO
                        If (sModalidadeFrete = 'FCL');
                             Move (Trim(aFetchedValues[iRowCount][09])) to vData[iRow][3] // Name: DESCRIPTION, Length: 50, Datatype: String   
                        Else Move (Trim(aFetchedValues[iRowCount][02])) to vData[iRow][3] // Name: DESCRIPTION, Length: 50, Datatype: String   
                        
                        Move      (aFetchedValues[iRowCount][03])       to vData[iRow][4]  // Name: NCM, Length: 12, Datatype: String        
                        Move      (aFetchedValues[iRowCount][04])       to vData[iRow][5]  // Name: CLASS, Length: 12, Datatype: String          
                        Move      (aFetchedValues[iRowCount][05])       to vData[iRow][6]  // Name: PKG, Length: 12, Datatype: String            
                        Move      (aFetchedValues[iRowCount][06])       to vData[iRow][7]  // Name: SUBRISK, Length: 12, Datatype: String        
                        Move (Trim(aFetchedValues[iRowCount][07]))      to vData[iRow][8]  // Name: UN, Length: 25, Datatype: String              
                        Move      (aFetchedValues[iRowCount][08])       to vData[iRow][0]  // Name: recnum, Length: 12, Datatype: integer        
                        
                        Move True to bFound
                    Loop
                Case Break
                Case (iSibling = 0 and iLevel = 1 and sTableName = "HCGS3005")
                // ToDo:RDS array for the table HCGS3005
                // The first dimension identifies the row, the second dimension identifies the column.
                    Move 0 to iRow                             
                    
                    Get Find_Code_Description of oCSAG367_FVT 'RV_PROPFREIGHT_08' to sQuery
                    Move (SFormat(sQuery, ToSQLInteger(sHCGS3004PROPOSTA))) to sQuery

                    Move (ResizeArray(aFetchedValues,0)) to aFetchedValues
                    //-
                    Get Create (RefClass(cSQLHandleManager)) to hoMngr
                    Get SQLFileConnect of hoMngr HCGS3005.File_number to hoDBC
                    If (hoDBC <> 0) Begin
                        Get SQLOpen of hoDBC to hoStmt
                        If (hoStmt <> 0) Begin
                            Send SQLExecDirect of hoStmt sQuery
                            Get SQLFetchResultsetValues of hoStmt to aFetchedValues
                        End
                        Send SQLCLose of hoStmt
                    End
                    Send SQLDisconnect of hoDBC
                
                    Send Destroy of hoMngr
                    //- load array
                    Move (SizeOfArray(aFetchedValues)) to iRows
                    For iRowCount from 0 to (iRows - 1)
                        Move (SizeOfArray(vData)) to iRow
                        Move '' to sAuxContainer
                        Move (aFetchedValues[iRowCount][00])                to vData[iRow][0] // Name: PROPOSTA_ID, Length: 10, Datatype: Integer
                        Move (aFetchedValues[iRowCount][02])                to vData[iRow][1] // Name: QTY, Length: 10, Datatype: Integer
                        Move (FormatNumber(vData[iRow][1], 0))              to vData[iRow][1]
                        Move (Trim(aFetchedValues[iRowCount][03]))          to vData[iRow][2]  // Name: PACKAGE_TYPE, Length: 100, Datatype: String
                        Move (Trim(aFetchedValues[iRowCount][10]))          to vData[iRow][3]  // Name: EQUIPMENT, Length: 14, Datatype: String
                        
                        If (vData[iRow][3]=Rtrim(TSMG800.NAOSEAPLICA_CNTR));
                            Move '-' to vData[iRow][3]
                        
                        If (vData[iRow][3] contains '20') Set pb20 to True
                        If (vData[iRow][3] contains '40') Set pb40 to True
                                                              
                        Move (doNumber(aFetchedValues[iRowCount][06]))      to sAuxNumbers  // Name: LENGTH, Length: 4, Precision: 3, Datatype: Number
                        Move (ROUNDALL(sAuxNumbers, 3))                     to sAuxNumbers
                        Move (FormatNumber(sAuxNumbers, 3))                 to vData[iRow][4]
                        
                        Move (doNumber(aFetchedValues[iRowCount][07]))      to sAuxNumbers  // Name: WIDTH, Length: 4, Precision: 3, Datatype: Number
                        Move (ROUNDALL(sAuxNumbers, 3))                     to sAuxNumbers
                        Move (FormatNumber(sAuxNumbers, 3))                 to vData[iRow][5]
                        
                        Move (doNumber(aFetchedValues[iRowCount][08]))      to sAuxNumbers  // Name: HEIGHT, Length: 4, Precision: 3, Datatype: Number
                        Move (ROUNDALL(sAuxNumbers, 3))                     to sAuxNumbers
                        Move (FormatNumber(sAuxNumbers, 3))                 to vData[iRow][6]
                        
                        Move (doNumber(aFetchedValues[iRowCount][04]))      to sAuxNumbers  // Name: WEIGHT, Length: 5, Precision: 3, Datatype: Number
                        Move (ROUNDALL(sAuxNumbers, 3))                     to sAuxNumbers
                        Move (FormatNumber(sAuxNumbers, 3))                 to vData[iRow][7]
                        
                        Move (doNumber(aFetchedValues[iRowCount][22]))      to sAuxNumbers  // Name: TT_WEIGHT, Length: 8, Precision: 3, Datatype: Number
                        Move (ROUNDALL(sAuxNumbers, 3))                     to sAuxNumbers
                        Move (FormatNumber(sAuxNumbers, 3))                 to vData[iRow][8]
                        
                        Move (Trim(aFetchedValues[iRowCount][23]))          to vData[iRow][9]  // Name: TT_TYPE_WEIGHT, Length: 5, Datatype: String
                        
                        Move (doNumber(aFetchedValues[iRowCount][24]))      to sAuxNumbers // Name: TT_CUBIC, Length: 8, Precision: 3, Datatype: Number
                        Move (ROUNDALL(sAuxNumbers, 3))                     to sAuxNumbers
                        Move (FormatNumber(sAuxNumbers, 3))                 to vData[iRow][10]
                        
                        Move (Trim(aFetchedValues[iRowCount][25]))          to vData[iRow][11] // Name: TT_TYPE_CUBIC, Length: 5, Datatype: String
                        Move (Trim(aFetchedValues[iRowCount][09]))          to vData[iRow][12] // Name: TYPE_DIMENSION, Length: 5, Datatype: String
                        Move (Trim(aFetchedValues[iRowCount][05]))          to vData[iRow][13] // Name: TYPE_WEIGHT, Length: 5, Datatype: String
                        Move (Trim(aFetchedValues[iRowCount][01]))          to vData[iRow][14] // Name: MODULO, Length: 3, Datatype: String

                        Move ''                                             to vData[iRow][15] // Name: UN, Length: 25, Datatype: String
                        Move ''                                             to vData[iRow][16] // Name: OBS, Length: 255, Datatype: String
                        Move 0                                              to vData[iRow][17] // Name: HSAG560_RECNUM, Length: 10, Datatype: Integer

                        Move (Trim(aFetchedValues[iRowCount][16]))          to sUN1
                        Move (Trim(aFetchedValues[iRowCount][36]))          to sUN2 
                        
                        If (sUN1 <> '') Begin
                            //- NUMERO DO IMO 
                            Move ('UN'*sUN1) to vData[iRow][15] 
                            If (sUN2 <> sUN1) Begin
                                Move (Trim(vData[iRow][15])*'|'*sUN2) to vData[iRow][15]
                            End
                        End
                        If ((Trim(aFetchedValues[iRowCount][27])) = 1) Begin
                            //- NAO EMPILHAVEL
                            If (vData[iRow][15] <> '') Move (vData[iRow][15]*'-'*'N.E.') to vData[iRow][15] 
                            Else Move ('N.E.') to vData[iRow][15] 
                        End

                        Move '' to sAuxTaxes
                        
                        //IMO
                        If ((Trim(aFetchedValues[iRowCount][29])) = "1");
                            Move 'HAZARDOUS' to sAuxTaxes 
                        //NAO EMPILHAVEL
                        If ((Trim(aFetchedValues[iRowCount][30])) = "1") Begin
                            If (sAuxTaxes = '') Move 'NON-STACKABLE' to sAuxTaxes
                            Else  Move (sAuxTaxes+', NON-STACKABLE') to sAuxTaxes
                        End
                        //BAGAGEM
                        If ((Trim(aFetchedValues[iRowCount][31])) = "1") Begin
                            If (sAuxTaxes = '') Move 'PERSONAL EFFECTS' to sAuxTaxes
                            Else  Move (sAuxTaxes+', PERSONAL EFFECTS') to sAuxTaxes
                        End
                        //CONSUMO ANIMAL
                        If ((Trim(aFetchedValues[iRowCount][32])) = "1") Begin
                            If (sAuxTaxes = '') Move 'ANIMAL CONSUMPTION' to sAuxTaxes
                            Else  Move (sAuxTaxes+', ANIMAL CONSUMPTION') to sAuxTaxes
                        End
                        //CONSUMO HUMANO
                        If ((Trim(aFetchedValues[iRowCount][33])) = "1") Begin
                            If (sAuxTaxes = '') Move 'HUMAN CONSUMPTION' to sAuxTaxes
                            Else  Move (sAuxTaxes+', HUMAN CONSUMPTION') to sAuxTaxes
                        End
                        //OUTROS
                        If ((Trim(aFetchedValues[iRowCount][34])) = "1") Begin
                           If (sAuxTaxes = '') Move (Trim(aFetchedValues[iRowCount][35])) to sAuxTaxes //(Trim(SqlFindValue(hStmt_HCGS3005,36))) to sAuxTaxes
                           Else  Move (sAuxTaxes+','*Trim(aFetchedValues[iRowCount][35])) to sAuxTaxes //Trim(SqlFindValue(hStmt_HCGS3005,36))) to sAuxTaxes
                        End
                        
                        //EXCESSO
                        Move (Trim(aFetchedValues[iRowCount][44])) to sAuxContainer
                        If ((Trim(aFetchedValues[iRowCount][37])) = "1") Begin
                            If (sAuxTaxes = '') Move (Trim('EXCESSO:')) to sAuxTaxes
                            Else Move  (sAuxTaxes+','*Trim('EXCESSO:')) to sAuxTaxes
                            
                           
                            If (sAuxContainer contains 'FR') Begin
                                Move (sAuxTaxes*'L:'*String(aFetchedValues[iRowCount][39]))  to sAuxTaxes //String(SqlFindValue(hStmt_HCGS3005,40))) to sAuxTaxes
                                Move (sAuxTaxes*'|H:'*String(aFetchedValues[iRowCount][38])) to sAuxTaxes //String(SqlFindValue(hStmt_HCGS3005,39))) to sAuxTaxes
                                Move (sAuxTaxes*'|W:'*String(aFetchedValues[iRowCount][40])) to sAuxTaxes //String(SqlFindValue(hStmt_HCGS3005,41))) to sAuxTaxes
                            End
                            
                            If (sAuxContainer contains 'OT') Begin
                                Move (sAuxTaxes*'H:'*String(aFetchedValues[iRowCount][38])) to sAuxTaxes  //String(SqlFindValue(hStmt_HCGS3005,39))) to sAuxTaxes
                            End
                           
                        End
                        If (sAuxContainer contains 'REF') Begin
                            Move (sAuxTaxes*String(aFetchedValues[iRowCount][42])*Trim(' C')) to sAuxTaxes
                            If ((aFetchedValues[iRowCount][43]) <> '0001-01-01');
                                Move (sAuxTaxes*String(aFetchedValues[iRowCount][43])) to sAuxTaxes
                        End
                        
                        Move sAuxTaxes                                      to vData[iRow][16] // Name: OBS, Length: 255, Datatype: String
                        Move (aFetchedValues[iRowCount][28])                to vData[iRow][17] // Name: HSAG560_RECNUM, Length: 10, Datatype: integer
                    Loop
                Case Break
                Case (iSibling = 0 and iLevel = 1 and sTableName = "TCGS3005")
                // ToDo:RDS array for the table TCGS3005
                // The first dimension identifies the row, the second dimension identifies the column.
                    Clear HCGS3004
                    Move sHCGS3004PROPOSTA to HCGS3004.PROPOSTA
                    Find Eq HCGS3004 by 1
                    If (Found) Begin
                        Move HCGS3004.TT_CBM    to nTTVolume
                        Move HCGS3004.TT_WEIGHT to nTTPeso
                        
                    End
                    Move 0 to iRow

                    Move (SFormat("SELECT SUM(PCS) FROM DBO.HCGS3005 WHERE PROPOSTA_ID = %1",sHCGS3004PROPOSTA)) to sQuery

                    SQL_FIND_BEGIN hStmt_HCGS3005 sQuery
                        Move (SqlFindValue(hStmt_HCGS3005,1)) to vData[iRow][3]  // Name: TT_QTD, Length: 12, Datatype: String
                    SQL_FIND_END hStmt_HCGS3005 
                  
                    Move  sHCGS3004PROPOSTA         to vData[iRow][0]  // Name: PROPOSTA_ID, Length: 10, Datatype: Integer
                    
                    Move (ROUNDALL(nTTPeso, 3))     to nTTPeso
                    Move (ROUNDALL(nTTVolume, 3))   to nTTVolume
                    
                    Move (FormatNumber(nTTPeso,3))     to vData[iRow][1]  // Name: TT_WEIGHT, Length: 12, Datatype: String
                    Move (FormatNumber(nTTVolume,3))   to vData[iRow][2]  // Name: TT_CUBIC, Length: 12, Datatype: String
                Case Break
                Case (iSibling = -1 and iLevel = 0 and sTableName = "HCGS3006")
                // ToDo:RDS array for the table HCGS3006
                // The first dimension identifies the row, the second dimension identifies the column.                    
                    Move '7,6,0,4' to sTiposFixos
                    
                    Clear HCGS3004
                    Move sHCGS3004PROPOSTA to HCGS3004.PROPOSTA
                    Find Eq HCGS3004 by 1
                    If (Found) Begin
                        
                        Move HCGS3004.TT_CBM    to nTTVolume
                        Move HCGS3004.TT_WEIGHT to nTTPeso
                        
                        //MEDIDAS QUE SERAO USADAS PARA CALCULOS E SAO ABAIXO DE 1
                        If (nTTPeso <> 0 and nTTVolume <> 0) Begin
                            Move (nTTPeso/1000) to nAuxPeso
                            If (nTTVolume > nAuxPeso) Move nTTVolume to nAuxPeso
                        End
                        If (nAuxPeso < 1) Move True to bAbaixoDeUm
                        Else Move False to bAbaixoDeUm

                    //-- PESOCUBADO
                        Move False to bSEA
                        Move False to bAIR
                    //-- bSEA
                        Move (HCGS3004.CCGS202_ID contains 'LCL') to bSEA
                        If (not(bSEA)) Move (HCGS3004.CCGS202_ID contains 'FCL') to bSEA
                    //-- bAIR
                        Move (HCGS3004.CCGS202_ID contains 'AIR') to bAIR
                    //-- Aplicar Calculo
                        If (bSEA) Begin
                            Move (nTTPeso/1000) to nPesoCubado
                            Move (ROUNDALL(nPesoCubado, 4)) to nPesoCubado
                            Move (ROUNDALL(nTTVolume, 4)) to nTTVolume
                            If (nPesoCubado < nTTVolume) Move nTTVolume to nPesoCubado
                        End
                    End
                    
                    
                    Move False to b20
                    Move False to b40 
                    
                    Move "SELECT DISTINCT EQUIPAMENTO FROM DBO.HCGS3005 WHERE PROPOSTA_ID = %1 AND PCS <> 0 ORDER BY EQUIPAMENTO" to sQuery
                    Move (SFormat(sQuery,sHCGS3004PROPOSTA)) to sQuery

                    SQL_FIND_BEGIN hStmt_search sQuery
                        If (Trim(SqlFindValue(hStmt_search,1)) contains '20') Move True to b20
                        If (Trim(SqlFindValue(hStmt_search,1)) contains '40') Move True to b40
                    SQL_FIND_END hStmt_search 
                    
                    Move 0 to iRow
                    
                    Get Find_Code_Description of oCSAG367_FVT 'RV_PROPFREIGHT_09' to sQuery
                    
                    If (HCGS3004.CCGS202_ID = 'LCL');
                        Move (sQuery*"ORDER BY  TT.NM_TAXA,D.PROPOSTA_ID, D.CCGS210_ID, D.TAXA_CLASSES, D.DESCRICAO, D.CARRIER_ID, D.VL_VENDA") to sQuery
                    If (HCGS3004.CCGS202_ID = 'FCL');
                        Move (sQuery*"ORDER BY D.TAXA_ID,ctnr.SIGLA_CONTAINER") to sQuery
                    
                    Move (SFormat(sQuery,sHCGS3004PROPOSTA)) to sQuery
                    Send pLogSQLCROSS of ghoApplication "RV_PROPFREIGHT_09 <> AIR" sQuery

                    Get Create (RefClass(cSQLHandleManager)) to hoMngr
                    Get SQLFileConnect of hoMngr HCGS3006.File_number to hoDBC
                    If (hoDBC <> 0) Begin
                        Get SQLOpen of hoDBC to hoStmt
                        If (hoStmt <> 0) Begin
                            Send SQLExecDirect of hoStmt sQuery
                            Get SQLFetchResultsetValues of hoStmt to aFetchedValues
                        End
                        Send SQLCLose of hoStmt
                    End
                    Send SQLDisconnect of hoDBC
            
                    Send Destroy of hoMngr
                    Move (SizeOfArray(aFetchedValues)) to iRows
                    For iRowCount from 0 to (iRows - 1)    
                        If (HCGS3004.CCGS202_ID = 'LCL' or (HCGS3004.CCGS202_ID = 'FCL' and doNumber(aFetchedValues[iRowCount][17]) <> 0 or doNumber(aFetchedValues[iRowCount][40]) <> 0)) Begin    
                            If (HCGS3004.CCGS202_ID = 'FCL') Begin
                                Move False to bTaxaRepetida
                                Move (sAuxTaxes = aFetchedValues[iRowCount][11] and sAuxAutenticaCNTR = Trim(aFetchedValues[iRowCount][48])) to bTaxaRepetida                                        
                                If (not(bTaxaRepetida)) Begin
                                    If (sAuxTaxes <> '') Increment iRow
                                    Move '-' to vData[iRow][35] //VL_AMOUNT
                                End
                            End
                            
                            Move (aFetchedValues[iRowCount][00])            to vData[iRow][0]  // Name: PROPOSTA_ID, Length: 10, Datatype: Integer
                            Move (aFetchedValues[iRowCount][01])            to vData[iRow][1]  // Name: CCGS210_ID, Length: 10, Datatype: Integer
                            Move (Trim(aFetchedValues[iRowCount][02]))      to vData[iRow][2]  // Name: CCGS210_DS, Length: 100, Datatype: String
                            If (pbHiddenArmador(Self)) Begin
                                Move 0                                      to vData[iRow][3]  // Name: CARRIER_ID, Length: 10, Datatype: Integer
                                Move ''                                     to vData[iRow][4]  // Name: CARRIER_DS, Length: 100, Datatype: String
                            End
                            Else Begin
                                Move (aFetchedValues[iRowCount][03])          to vData[iRow][3]  // Name: CARRIER_ID, Length: 10, Datatype: Integer
                                Move (Trim(aFetchedValues[iRowCount][04]))    to vData[iRow][4]  // Name: CARRIER_DS, Length: 100, Datatype: String
                                If (vData[iRow][4] = '') Move 'ALL' to vData[iRow][4]
                            End
                            Move (Trim(aFetchedValues[iRowCount][05]))      to vData[iRow][5]  // Name: PROTOCOLO_ID, Length: 15, Datatype: String
                            Move (Trim(aFetchedValues[iRowCount][06]))      to vData[iRow][6]  // Name: CONTRATO_NR, Length: 64, Datatype: String
                            Move (aFetchedValues[iRowCount][07])            to vData[iRow][7]  // Name: POD, Length: 10, Datatype: Integer
                            Move (Trim(aFetchedValues[iRowCount][08]))      to vData[iRow][8]  // Name: POD_DS, Length: 100, Datatype: String
                            Move (Trim(aFetchedValues[iRowCount][09]))      to vData[iRow][9]  // Name: POL, Length: 10, Datatype: Integer
                            Move (Trim(aFetchedValues[iRowCount][10]))      to vData[iRow][10] // Name: POL_DS, Length: 100, Datatype: String
                            Move (aFetchedValues[iRowCount][11])            to vData[iRow][11] // Name: TAXA_ID, Length: 10, Datatype: Integer
                            Move (Trim(aFetchedValues[iRowCount][12]))      to vData[iRow][12] // Name: CCGS215_DS, Length: 100, Datatype: String
                            Move (aFetchedValues[iRowCount][14])            to vData[iRow][14] // Name: CSAG379_ID, Length: 100, Datatype: String
                            Move (Trim(aFetchedValues[iRowCount][15]))      to sNovaClasse
                            
                            If (HCGS3004.CCGS202_ID = 'FCL') Begin
                                If (sNovaClasse = 'F') Move ('1'+sNovaClasse) to sNovaClasse
                                If (sNovaClasse = 'O') Move ('2'+sNovaClasse) to sNovaClasse
                                If (sNovaClasse = 'D') Move ('3'+sNovaClasse) to sNovaClasse
                            End
                            Move (sNovaClasse) to vData[iRow][15] // Name: TAXA_CLASSES, Length: 20, Datatype: String
                            
                            Move (aFetchedValues[iRowCount][22])            to vData[iRow][22] // Name: CSAG308_ID, Length: 10, Datatype: Integer
                            Move (Trim(aFetchedValues[iRowCount][23]))      to vData[iRow][23] // Name: CSAG308_DS, Length: 100, Datatype: String
                            Move (Trim(aFetchedValues[iRowCount][24]))      to vData[iRow][24] // Name: ID_DT_APARTIR, Length: 100, Datatype: String
                            Move (Trim(aFetchedValues[iRowCount][25]))      to vData[iRow][25] // Name: TRANSIT_TIME, Length: 20, Datatype: String
                            Move (Trim(aFetchedValues[iRowCount][26]))      to vData[iRow][26] // Name: FREQUENCIA, Length: 100, Datatype: String
                            Move (Trim(aFetchedValues[iRowCount][27]))      to vData[iRow][27] // Name: FREETIME, Length: 100, Datatype: String
                            Move (Trim(aFetchedValues[iRowCount][28]))      to vData[iRow][28] // Name: CSAG325_VIA, Length: 100, Datatype: String
                            Move (aFetchedValues[iRowCount][29])            to vData[iRow][29] // Name: CSAG329_ID, Length: 3, Datatype: String
                            Move (aFetchedValues[iRowCount][30])            to vData[iRow][30] // Name: CSAG345_ID, Length: 10, Datatype: Integer
                            Move (Trim(aFetchedValues[iRowCount][31]))      to vData[iRow][31] // Name: CSAG345_DS, Length: 100, Datatype: String
                            Move (aFetchedValues[iRowCount][32])            to vData[iRow][32] // Name: ID_IMO, Length: 1, Datatype: String
                            Move (aFetchedValues[iRowCount][33])            to vData[iRow][33] // Name: ID_NOTSTACKBLE, Length: 1, Datatype: String
                            Move (aFetchedValues[iRowCount][34])            to vData[iRow][34] // Name: ID_PERSONNAL, Length: 1, Datatype: String
                            Move (aFetchedValues[iRowCount][18])            to vData[iRow][18] // Name: TP_CALCULO_V_ID, Length: 10, Datatype: Integer
                                
                            If (HCGS3004.CCGS202_ID = 'LCL') Begin
                                //--- TIPO EQUIPAMENTO
                                Move (Trim(aFetchedValues[iRowCount][21]))      to vData[iRow][21] // Name: TP_CONTAINER, Length: 14, Datatype: String
        
                                //--- DESCRICAO / NOME
                                Move (Trim(aFetchedValues[iRowCount][13]))      to vData[iRow][13] // Name: DESCRICAO, Length: 200, Datatype: String
                                If (vData[iRow][13] = '');
                                Move (Trim(aFetchedValues[iRowCount][36]))      to vData[iRow][13] // Name: DESCRICAO, Length: 200, Datatype: String
                                
                                // Name: DESCRICAO, Length: 200, Datatype: String
                                If (vData[iRow][21]<>Rtrim(TSMG800.NAOSEAPLICA_CNTR));
                                Move (String(vData[iRow][13])*'-'*String(vData[iRow][21])) to vData[iRow][13] 
                                
                                // Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                If (aFetchedValues[iRowCount][18] = 7) Move (Trim('FIXO')) to vData[iRow][19]                               
                                Else Move (Trim(aFetchedValues[iRowCount][19])) to vData[iRow][19]
                                If (vData[iRow][21]=Rtrim(TSMG800.NAOSEAPLICA_CNTR)) Move '-' to vData[iRow][21]
                                
                                Move (Trim(aFetchedValues[iRowCount][43]))     to sAuxTaxes
                                Move (Trim(aFetchedValues[iRowCount][44]))     to sAuxsUsers
        
                                //TIPO CALCULO COMISSAO
                                Move (Trim(aFetchedValues[iRowCount][46]))     to sTipoComissao
                                //TIPO CALCULO TAXA
                                Move (Trim(aFetchedValues[iRowCount][18]))     to sTipoTaxa
                                
                                //GRUPO DE TAXAS FIXAS - 7,6,0
                                //GRUPO DE TAXAS TON/M3 - 1
                                
                                // Name: MOEDA_VENDA, Length: 12, Datatype: String
                                Move (Trim(aFetchedValues[iRowCount][16]))     to vData[iRow][16]
                                
                                // Name: VL_VENDA, Length: 8, Precision: 2, Datatype: Number
                                Move (Trim(aFetchedValues[iRowCount][17]))     to vData[iRow][17]  
                                
                                //--------- O CAMPO SENDO UTILIZADO PARA A IMPRESSAO DO CAMPO
                                //--------- VALORES+TIPO DE CALCULO+MIN+MAX+OBS = vData[iRow][20]
                                
                                //AMOUNT COMISSAO
                                Move (doNumber(aFetchedValues[iRowCount][40]))     to nSoma //VALOR UNITARIO COMISSAO
                                If (nSoma <> 0) Move True to bComissao
                                Else Move False to bComissao
                                Move (nSoma+doNumber(aFetchedValues[iRowCount][17]))     to nSoma // 18 -- VALOR UNITARIO TAXA
                                
                                If (bAbaixoDeUm) Begin
                                    If (bComissao) Begin
                                        If (sTipoTaxa = sTipoComissao or sTiposFixos contains sTipoTaxa and sTiposFixos contains sTipoComissao) Begin
                                            // Name: VL_VENDA, Length: 8, Precision: 2, Datatype: Number
                                            Move (doNumber(aFetchedValues[iRowCount][17])+doNumber(aFetchedValues[iRowCount][40]))       to sValores
                                            
                                            // Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                            Move (sValores+'*'*vData[iRow][19]) to sValores 
                                            If (not(sTiposFixos contains sTipoTaxa)) Begin
                                                // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                                 Move (doNumber(aFetchedValues[iRowCount][20])+doNumber(aFetchedValues[iRowCount][42]))       to nSoma
                                                
                                                If (nSoma <> '0') Move (sValores*'- MIN'*FormatNumber(nSoma,2)) to sValores // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                                
                                                // Name: VL_MAXIMO_V, Length: 8, Precision: 2, Datatype: Number
                                                Move (doNumber(aFetchedValues[iRowCount][38])+doNumber(aFetchedValues[iRowCount][47]))       to nNumero
                                                
                                                If (nNumero <> 0) Move (sValores*'- MAX'*FormatNumber(nNumero,2)) to sValores                                     
                                            End 
                                            
                                        End //If (sTipoTaxa = sTipoComissao) Begin
                                        Else Begin
                                            If (sTipoTaxa = sTipoComissao or sTiposFixos contains sTipoTaxa and sTiposFixos contains sTipoComissao) Begin
                                                Move (doNumber(aFetchedValues[iRowCount][17])+doNumber(aFetchedValues[iRowCount][41]))       to sValores
                                                
                                                // Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                                Move (sValores+'*'*vData[iRow][19]) to sValores 
                                                // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                                Move (doNumber(aFetchedValues[iRowCount][20])+doNumber(aFetchedValues[iRowCount][41]))       to nSoma
                                                If (nSoma <> '0') Move (sValores*'- MIN'*FormatNumber(nSoma,2)) to sValores 
                                                // Name: VL_MAXIMO_V, Length: 8, Precision: 2, Datatype: Number
                                                Move (doNumber(aFetchedValues[iRowCount][38])+doNumber(aFetchedValues[iRowCount][47]))       to nNumero
                                                If (nNumero <> 0) Move (sValores*'- MAX'*FormatNumber(nNumero,2)) to sValores                                     
                                            End 
                                            Else Begin
                                                If (sTipoComissao contains sTipoTaxa and sTipoComissao = 1) Begin
                                                    Move (doNumber(aFetchedValues[iRowCount][17])+doNumber(aFetchedValues[iRowCount][41]))       to sValores
                                                End
                                                Else Move (String(aFetchedValues[iRowCount][45])+'CMS') to sValores //Move (String(SqlFindValue(hStmt_HCGS3006,46)+'CMS')) to sValores 
                                            End
                                        End
                                        
                                        If (not(sValores contains 'CMS')) Begin
                                            //OBS vinda do tarifario
                                            If (aFetchedValues[iRowCount][37] <> '');
                                                Move (sValores*'- OBS:'*Trim(aFetchedValues[iRowCount][37]))     to sValores // Name: OBS_TARIFA, Length: 250, Datatype: String
                                        End
                                        //TEXTO DESCRITIVO DO VALOR DA TAXA   
                                        Move (Trim(sValores)) to vData[iRow][20]
                                        // --------------------------------------------------
                                            
                                        // Name: VL_AMOUNT, Length: 14, Precision: 2, Datatype: Number
                                        Move (doNumber(aFetchedValues[iRowCount][35])+doNumber(aFetchedValues[iRowCount][41]))       to nSoma
                                        Move (ROUNDALL(nSoma,2)) to nSoma
                                        Move (FormatNumber(nSoma,2)) to vData[iRow][35]
                                       
                                        Move "" to sValores
                                        Move (Trim(aFetchedValues[iRowCount][16]))   to sValores
            
                                        // Name: VL_AMOUNT, Length: 14, Precision: 2, Datatype: Number
                                        // Name: MODO DE PAGAMENTO
                                        Move (sValores*vData[iRow][35]) to vData[iRow][35] 
                                        If (aFetchedValues[iRowCount][39] <> '')     Move (Trim(vData[iRow][35]*Trim(aFetchedValues[iRowCount][39])))   to vData[iRow][35]
                                    End //If (bComissao) Begin
                                    Else Begin
                                        
                                        If (nSoma <> 0 and nSoma <> -1) Begin
                                            // Name: VL_VENDA, Length: 8, Precision: 2, Datatype: Number
                                            Move (vData[iRow][17]) to sValores 
                                            // Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                            Move (sValores+'*'*vData[iRow][19]) to sValores 
                                            
                                            // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                            Move (doNumber(aFetchedValues[iRowCount][20]))     to nSoma
                                            If (nSoma <> '0');
                                                Move (sValores*'- MIN'*FormatNumber(nSoma,2)) to sValores // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                            // Name: VL_MAXIMO_V, Length: 8, Precision: 2, Datatype: Number
                                            Move (doNumber(aFetchedValues[iRowCount][38]))     to nNumero
                                            If (nNumero <> 0);
                                                Move (sValores*'- MAX'*FormatNumber(nNumero,2)) to sValores 
                                            //OBS vinda do tarifario
                                            If (aFetchedValues[iRowCount][37] <> '');
                                                Move (sValores*'- OBS:'*Trim(aFetchedValues[iRowCount][37]))     to sValores // Name: OBS_TARIFA, Length: 250, Datatype: String
                                            //TEXTO DESCRITIVO DO VALOR DA TAXA   
                                            Move (Trim(sValores)) to vData[iRow][20] 
                                            // --------------------------------------------------
                                            // Name: VL_AMOUNT, Length: 14, Precision: 2, Datatype: Number
                                            Move (doNumber(aFetchedValues[iRowCount][35]))     to nSoma
                                            Move (ROUNDALL(nSoma,2)) to nSoma
                                            Move (FormatNumber(nSoma,2)) to vData[iRow][35]
                
                                            Move "" to sValores
                                            Move (Trim(aFetchedValues[iRowCount][16]))     to sValores //MOEDA
                                            // Name: VL_AMOUNT, Length: 14, Precision: 2, Datatype: Number
                                            // Name: MODO DE PAGAMENTO
                                            Move (sValores*vData[iRow][35]) to sValores 
                                            If (aFetchedValues[iRowCount][39] <> '');
                                                Move (Trim(sValores*Trim(aFetchedValues[iRowCount][39])))     to vData[iRow][35] 
                                        End
                                        Else Begin
                                            If (nSoma = 0) Begin
                                                Move "Isenta" to vData[iRow][20]
                                                If (vData[iRow][11] = '303')  Move (vData[iRow][20]*'- OBS:'*Trim(aFetchedValues[iRowCount][37]))     to vData[iRow][20]
                                                Move "Isenta" to vData[iRow][35]
                                            End
                                            If (nSoma = -1) Begin
                                                Move "Sob Consulta" to vData[iRow][20]
                                                If (vData[iRow][11] = '303')  Move (vData[iRow][20]*'- OBS:'*Trim(aFetchedValues[iRowCount][37]))     to vData[iRow][20]
                                                Move "Sob Consulta" to vData[iRow][35]
                                            End
                                        End
                                    End
                                End //If (bAbaixoDeUm) Begin
                                Else Begin  //If (bAbaixoDeUm) Begin
                                    If (bComissao) Begin
                                        If ((sTipoTaxa = sTipoComissao) or (sTiposFixos contains sTipoTaxa and sTiposFixos contains sTipoComissao)) Begin
                                            // Name: VL_VENDA, Length: 8, Precision: 2, Datatype: Number
                                            Move (doNumber(aFetchedValues[iRowCount][17])+doNumber(aFetchedValues[iRowCount][40]))       to sValores
                                            // Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                            Move (sValores+'*'*vData[iRow][19]) to sValores 
                                            If (sTipoTaxa <> 7 ) Begin
                                                // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                                Move (doNumber(aFetchedValues[iRowCount][20])+doNumber(aFetchedValues[iRowCount][42]))       to nSoma
                                                If (nSoma <> '0') Move (sValores*'- MIN'*FormatNumber(nSoma,2)) to sValores // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                                
                                                // Name: VL_MAXIMO_V, Length: 8, Precision: 2, Datatype: Number
                                                Move (doNumber(aFetchedValues[iRowCount][38])+doNumber(aFetchedValues[iRowCount][47]))       to nNumero
                                                If (nNumero <> 0) Move (sValores*'- MAX'*FormatNumber(nNumero,2)) to sValores                                     
                                            End
                                            
                                        End //If (sTipoTaxa = sTipoComissao or sTiposFixos contains sTipoTaxa and sTiposFixos contains sTipoComissao) Begin
                                        Else Begin
                                            If (sTipoTaxa = 1 and sTiposFixos contains sTipoComissao) Begin
                                                Move (doNumber(aFetchedValues[iRowCount][41]))     to nSoma
                                                //---- CONVERCAO
                                                If (nTTPeso <> 0 and nTTVolume <> 0) Begin
                                                    Move (nTTPeso/1000) to nAuxPeso
                                                    If (nTTVolume > nAuxPeso) Move nTTVolume to nAuxPeso
                                                End
                                                Move (nSoma/nAuxPeso) to nSoma
                                                
                                                Move (doNumber(aFetchedValues[iRowCount][17]) + nSoma)     to sValores
                                                // Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                                Move (sValores+'*'*vData[iRow][19]) to sValores 
                                                // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                                Move (doNumber(aFetchedValues[iRowCount][40]))     to nSoma
                                                //---- CONVERCAO
                                                If (nTTPeso <> 0 and nTTVolume <> 0) Begin
                                                    Move (nTTPeso/1000) to nAuxPeso
                                                    If (nTTVolume > nAuxPeso) Move nTTVolume to nAuxPeso
                                                End
                                                Move (nSoma/nAuxPeso) to nSoma
                                                
                                                Move (doNumber(aFetchedValues[iRowCount][20]) + nSoma)   to nNumero
                                                If (nNumero <> 0) Move (sValores*'- MIN'*FormatNumber(nNumero,2)) to sValores 
                                                // Name: VL_MAXIMO_V, Length: 8, Precision: 2, Datatype: Number
                                                Move (doNumber(aFetchedValues[iRowCount][38])+doNumber(aFetchedValues[iRowCount][47]))       to nNumero
                                                If (nNumero <> 0) Move (sValores*'- MAX'*FormatNumber(nNumero,2)) to sValores                                     
                                            End 
                                            Else Begin
                                                If (sTipoComissao contains sTipoTaxa and sTipoComissao = 1) Begin
                                                    Move (doNumber(aFetchedValues[iRowCount][17])+doNumber(aFetchedValues[iRowCount][41]))       to sValores
                                                End
                                                Else Move (String(aFetchedValues[iRowCount][45])+'CMS') to sValores 
                                            End
                                        End
                                        
                                        If (sValores contains 'CMS') Begin
                                            //OBS vinda do tarifario
                                            If (aFetchedValues[iRowCount][37] <> '');
                                                Move (sValores*'- OBS:'*Trim(aFetchedValues[iRowCount][37]))     to sValores // Name: OBS_TARIFA, Length: 250, Datatype: String
                                        End
                                        //TEXTO DESCRITIVO DO VALOR DA TAXA   
                                        Move (Trim(sValores)) to vData[iRow][20] 
                                        // --------------------------------------------------
                                        
                                        // Name: VL_AMOUNT, Length: 14, Precision: 2, Datatype: Number
                                        Move (doNumber(aFetchedValues[iRowCount][35])+doNumber(aFetchedValues[iRowCount][41]))       to nSoma
                                        Move (ROUNDALL(nSoma,2)) to nSoma
                                        Move (FormatNumber(nSoma,2)) to vData[iRow][35]
                                       
                                        Move "" to sValores
                                        Move (Trim(aFetchedValues[iRowCount][16]))     to sValores //MOEDA
            
                                        // Name: VL_AMOUNT, Length: 14, Precision: 2, Datatype: Number
                                        // Name: MODO DE PAGAMENTO
                                        Move (sValores*vData[iRow][35]) to vData[iRow][35] 
                                        If (aFetchedValues[iRowCount][39] <> '')     Move (Trim(vData[iRow][35]*Trim(aFetchedValues[iRowCount][39])))   to vData[iRow][35]
                                    End //If (bComissao) Begin
                                    Else Begin
                                        If (nSoma <> 0 and nSoma <> -1) Begin
                                            // Name: VL_VENDA, Length: 8, Precision: 2, Datatype: Number
                                            Move (vData[iRow][17]) to sValores 
                                            // Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                            Move (sValores+'*'*vData[iRow][19]) to sValores 
                                            
                                            // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                            Move (doNumber(aFetchedValues[iRowCount][20]))     to nSoma
                                            If (nSoma <> '0');
                                                Move (sValores*'- MIN'*FormatNumber(nSoma,2)) to sValores // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                            // Name: VL_MAXIMO_V, Length: 8, Precision: 2, Datatype: Number
                                            Move (doNumber(aFetchedValues[iRowCount][38]))     to nNumero
                                            If (nNumero <> 0);
                                                Move (sValores*'- MAX'*FormatNumber(nNumero,2)) to sValores 
                                            //OBS vinda do tarifario
                                            If (aFetchedValues[iRowCount][37] <> '');
                                                Move (sValores*'- OBS:'*Trim(aFetchedValues[iRowCount][37]))     to sValores // Name: OBS_TARIFA, Length: 250, Datatype: String
                                            
                                            //TEXTO DESCRITIVO DO VALOR DA TAXA   
                                            Move (Trim(sValores)) to vData[iRow][20] 
                                            // --------------------------------------------------
                                            // Name: VL_AMOUNT, Length: 14, Precision: 2, Datatype: Number
                                            Move (doNumber(aFetchedValues[iRowCount][35]))     to nSoma
                                            Move (ROUNDALL(nSoma,2)) to nSoma
                                            Move (FormatNumber(nSoma,2)) to vData[iRow][35]
                
                                            Move "" to sValores
                                            Move (Trim(aFetchedValues[iRowCount][16]))     to sValores //MOEDA
                
                                            // Name: VL_AMOUNT, Length: 14, Precision: 2, Datatype: Number
                                            // Name: MODO DE PAGAMENTO
                                            Move (sValores*vData[iRow][35]) to sValores 
                                            If (aFetchedValues[iRowCount][39] <> '');
                                                Move (Trim(sValores*Trim(aFetchedValues[iRowCount][39])))     to vData[iRow][35] 
                                        End
                                        Else Begin
                                            If (nSoma = 0) Begin
                                                Move "Isenta" to vData[iRow][20]
                                                If (vData[iRow][11] = '303')  Move (vData[iRow][20]*'- OBS:'*Trim(aFetchedValues[iRowCount][37]))     to vData[iRow][20]
                                                Move "Isenta" to vData[iRow][35]
                                            End
                                            If (nSoma = -1) Begin
                                                Move "Sob Consulta" to vData[iRow][20]
                                                If (vData[iRow][11] = '303')  Move (vData[iRow][20]*'- OBS:'*Trim(aFetchedValues[iRowCount][37]))     to vData[iRow][20]
                                                Move "Sob Consulta" to vData[iRow][35]
                                            End
                                        End
                                    End
                                End
                                
                                Move (iRow > 0) to bIsSame
                                Move False to bIsSame //--- TESTE
                                
                                If (not(bIsSame)) Increment iRow
                                
                            End //FIM IF PROPOSTA LCL
                            
                            If (HCGS3004.CCGS202_ID = 'FCL') Begin
                                Move (aFetchedValues[iRowCount][18])   to sTipoCalc 
                                
                                //DESCRICAO - NOME DA -- Name: DESCRICAO, Length: 200, Datatype: String
                                Move (Trim(aFetchedValues[iRowCount][36]))     to vData[iRow][13] 
                                //MOEDA - MOEDA -- Name: MOEDA_VENDA, Length: 12, Datatype: String
                                Move (Trim(aFetchedValues[iRowCount][16]))     to vData[iRow][16] 
                                
                                //--- TIPO EQUIPAMENTO -- Name: TP_CONTAINER, Length: 14, Datatype: String
                                Move (Trim(aFetchedValues[iRowCount][21]))     to sAuxContainer
                                Move (Trim(aFetchedValues[iRowCount][48]))     to vData[iRow][21] 
                                Move (Trim(aFetchedValues[iRowCount][48]))     to sAuxAutenticaCNTR
                                // Name: VL_VENDA, Length: 8, Precision: 2, Datatype: Number
                                Move (doNumber(aFetchedValues[iRowCount][17])+doNumber(aFetchedValues[iRowCount][40]))       to nAmount 
                                
                                If (sTipoCalc = '2') Begin
                                    If (sAuxContainer contains 'N.S.A.') Begin
                                        If (b20 = True) Begin
                                            If (vData[iRow][17] <> '') Move (nAmount+doNumber(vData[iRow][17])) to vData[iRow][17] //VL_VENDA
                                            Else Move nAmount to vData[iRow][17] //VL_VENDA
                                        End
                                        If (b40 = True) Begin
                                            If (vData[iRow][20] <> '') Move (nAmount+doNumber(vData[iRow][20])) to vData[iRow][20] //VL_VENDA
                                            Else Move nAmount to vData[iRow][20] //VL_MINIMO_V
                                        End
                                    End
                                    
                                    //20 - VALOR UNITARIO PARA 20
                                    If (sAuxContainer contains '20') Begin
                                        If (sAuxContainer <> '') Move (nAmount+doNumber(vData[iRow][17])) to vData[iRow][17] //VL_VENDA
                                        Else Move nAmount to vData[iRow][17] //VL_VENDA
                                    End
                                    Else If (vData[iRow][17] = '') Move '-' to vData[iRow][17] //VL_VENDA
                                    
                                    //40 - VALOR UNITARIO PARA 20
                                    If (sAuxContainer contains '40') Begin
                                        If (vData[iRow][20] <> '') Move (nAmount+doNumber(vData[iRow][20])) to vData[iRow][20] //VL_VENDA
                                        Else Move nAmount to vData[iRow][20] //VL_MINIMO_V
                                    End
                                    Else If (vData[iRow][20] = '') Move '-' to vData[iRow][20] //VL_MINIMO_V
                                End
                                Else Begin
                                    If (vData[iRow][17] = '') Move '-' to vData[iRow][17] //VL_VENDA
                                    If (vData[iRow][20] = '') Move '-' to vData[iRow][20] //VL_MINIMO_V
                                End
                                
                                If (sTipoCalc <> '2') Begin
                                    //BL - VALOR UNITARIO PARA QUANDO O CALCULO NAO FOR POR EQUIPAMENTO
                                    If (sAuxContainer contains 'N.S.A.') Begin
                                        Move nAmount to vData[iRow][35] //VL_AMOUNT
                                    End
                                End
                                //PREPAID/COLLECT - MODO DE PAGAMENTO VENDA
                                // Name: MODO DE PAGAMENTO -- Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                If (aFetchedValues[iRowCount][39] <> '') Begin
                                    Move (Trim(aFetchedValues[iRowCount][39]))     to vData[iRow][19]
                                    If (vData[iRow][19] = 'PREPAID') Move 'PP' to vData[iRow][19]
                                    If (vData[iRow][19] = 'COLLECT') Move 'CC' to vData[iRow][19]
                                    If (vData[iRow][19] = 'PREPAID ABROAD') Move 'PA' to vData[iRow][19]
                                End
                                Else Move 'Nao Info.' to vData[iRow][19] 
                                
                                If (not(bTaxaRepetida)) Begin
                                    Move (aFetchedValues[iRowCount][11])   to sAuxTaxes
                                    If (sTaxasFclBuscaComissao = '') Move (aFetchedValues[iRowCount][11])to sTaxasFclBuscaComissao //Move (SqlFindValue(hStmt_HCGS3006,12)) to sTaxasFclBuscaComissao
                                    Else Move (sTaxasFclBuscaComissao+','+String(aFetchedValues[iRowCount][11])) to sTaxasFclBuscaComissao
                                End
                                
                            End
                        End                        
                    Loop
                    
                    If (HCGS3004.CCGS202_ID = 'FCL') Begin
                        
                        For iRow from 0 to (SizeOfArray(vData)-1)
                            
                            Move "SELECT VALOR,TP_CONTAINER,TP_CALCULO FROM DBO.HCGS3007 WHERE HCGS3006_ID = 0 AND PROPOSTA_ID = %1" to sQuery
                            Move (SFormat(sQuery,sHCGS3004PROPOSTA)) to sQuery
                            
                            Move (sQuery*SFormat("AND TAXA_ID = %1",vData[iRow][11])) to sQuery
                            Move (sQuery*SFormat("AND TAXA_CLASSE = '%1'",Right(vData[iRow][15],1))) to sQuery
                            

                            SQL_FIND_BEGIN hStmt_search sQuery
                                If (SqlFindValue(hStmt_search,1) <> 0) Begin
                                    If (SqlFindValue(hStmt_search,3) = '2') Begin
                                        //20 - VALOR UNITARIO PARA 20
                                        If (Trim(SqlFindValue(hStmt_search,2)) contains '20') Begin
                                            Move (SqlFindValue(hStmt_search,1)) to vData[iRow][17] //VL_VENDA
                                        End
                                        //40 - VALOR UNITARIO PARA 20
                                        If (Trim(SqlFindValue(hStmt_search,2)) contains '40') Begin
                                            Move (SqlFindValue(hStmt_search,1)) to vData[iRow][20] //VL_MINIMO_V
                                        End
                                    End
                                    If (SqlFindValue(hStmt_search,3) <> '2') Begin
                                        //BL - VALOR UNITARIO PARA QUANDO O CALCULO NAO FOR POR EQUIPAMENTO
                                        If (Trim(SqlFindValue(hStmt_search,2)) contains 'N.S.A.') Begin
                                            Move (SqlFindValue(hStmt_search,1)) to vData[iRow][35] //VL_AMOUNT
                                        End    
                                    End
                                End
                            SQL_FIND_END hStmt_search 
                        Loop
                        
                    End //(HCGS3004.CCGS202_ID = 'FCL')
                   
                    Move False to bIsSame
                    For iRow from 0 to (SizeOfArray(vData)-1)
                        
                        //-- VIA
                        If (vData[iRow][28]='0' or vData[iRow][28]='') Move 'DIRECT SERVICE' to vData[iRow][28]
                        Else Begin
                            Move vData[iRow][28] to arrVia
                            Move '' to vData[iRow][28]
                            Get Find_Code_Description of oCSAG367_FVT 'RV_PROPFREIGHT_03' to sQuery
        			        Move (SFormat(sQuery, Trim(arrVia))) to sQuery

        			        SQL_FIND_BEGIN hStmt_pod sQuery
        			            Move (If(vData[iRow][28]<>'',(vData[iRow][28]+', '),'')+Trim(SqlFindValue(hStmt_pod,1))+'-'+Trim(SqlFindValue(hStmt_pod,2))) to vData[iRow][28]
        			        SQL_FIND_END hStmt_pod 
                        End
                        //
                        Move (iRow > 0) to bIsSame
                        Move False to bIsSame //--- TESTE
                        If (bIsSame);
                            Move (vData[iRow-1][0] = vData[iRow][0]) to bIsSame // Name: PROPOSTA_ID
                        If (bIsSame);
                            Move (vData[iRow-1][1] = vData[iRow][1]) to bIsSame // Name: CCGS210_ID
                        If (bIsSame);
                            Move (vData[iRow-1][15] = vData[iRow][15]) to bIsSame // Name: TAXA_CLASSES
                        If (bIsSame);
                            Move (vData[iRow-1][13] = vData[iRow][13]) to bIsSame // Name: DESCRICAO
                        If (bIsSame);
                            Move (vData[iRow-1][3] = vData[iRow][3]) to bIsSame // Name: CARRIER_ID
                        If (bIsSame) Begin
                            Move (vData[iRow-1][21] = vData[iRow][21]) to bIsSame // Name: TP_CONTAINER
                            If (not(bIsSame)) Begin
                                Move (vData[iRow-1][21] contains vData[iRow][21]) to bIsSame // Name: TP_CONTAINER
                            End
                        End
                        
                        //VERIFICACAO DA COMISSAO, TAMBEM ADAPTAR AO NOVO MODELO DE COMISSAO
                        For iRow from 0 to (SizeOfArray(vData)-1)
                            Move (Trim(vData[iRow][20])) to sAuxTaxes
                            Move (Right(sAuxTaxes,3)) to sAuxTaxes
                            If (sAuxTaxes='CMS') Begin
                                Move (Left(vData[iRow][20],Length(vData[iRow][20])-3)) to sAuxTaxes
                            
                                Get fDoAmountProp sAuxTaxes to sAuxTaxes
                                Move (FormatNumber(doNumber(sAuxTaxes),2)+'*'*vData[iRow][19]) to vData[iRow][20]
                            End
                        Loop
                        
                        If (HCGS3004.CCGS202_ID = 'LCL') Begin
                            Move "SELECT C.TAXA_ID,T.NM_TAXA,C.TAXA_CLASSE,C.VALOR,M.SIGLA,C.TP_CONTAINER,"     to sQuery
                            Move (sQuery*"C.TP_CALCULO,TP.DESCRICAO,C.VALOR_MIN,C.VALOR_MAX,C.NOTE,C.AMOUNT,")  to sQuery
                            Move (sQuery*"MP.DESCRICAO FROM DBO.HCGS3007 C")                                    to sQuery
                            Move (sQuery*"INNER JOIN DBO.HCGS3001 T ON T.CODIGO=C.TAXA_ID")                     to sQuery
                            Move (sQuery*"LEFT JOIN DBO.CCGS218 M ON M.CODIGO = C.MOEDA_ID")                    to sQuery
                            Move (sQuery*"LEFT JOIN DBO.CCGS220 TP ON TP.CODIGO = C.TP_CALCULO")                to sQuery
                            Move (sQuery*"LEFT JOIN DBO.CCGS206 MP ON MP.CODIGO=C.MD_PAGTO")                    to sQuery
                            Move (sQuery*"WHERE C.PROPOSTA_ID=%1 AND HCGS3006_ID=0")                            to sQuery
                            Move (SFormat(sQuery,sHCGS3004PROPOSTA))                                            to sQuery
                            

                            SQL_FIND_BEGIN hStmt_HCGS3007 sQuery
                                Move (SizeOfArray(vData)) to iRow
                                //CAMPOS AUTOMATICOS
                                Move vData[iRow-1][0]   to vData[iRow][0]  // Name: PROPOSTA_ID, Length: 10, Datatype: Integer
                                Move vData[iRow-1][1]   to vData[iRow][1]  // Name: CCGS210_ID, Length: 10, Datatype: Integer
                                Move vData[iRow-1][2]   to vData[iRow][2]  // Name: CCGS210_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][3]   to vData[iRow][3]  // Name: CARRIER_ID, Length: 10, Datatype: Integer
                                Move vData[iRow-1][4]   to vData[iRow][4]  // Name: CARRIER_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][5]   to vData[iRow][5]  // Name: PROTOCOLO_ID, Length: 15, Datatype: String
                                Move vData[iRow-1][6]   to vData[iRow][6]  // Name: CONTRATO_NR, Length: 64, Datatype: String
                                Move vData[iRow-1][7]   to vData[iRow][7]  // Name: POD, Length: 10, Datatype: Integer
                                Move vData[iRow-1][8]   to vData[iRow][8]  // Name: POD_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][9]   to vData[iRow][9]  // Name: POL, Length: 10, Datatype: Integer
                                Move vData[iRow-1][10]  to vData[iRow][10] // Name: POL_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][12]  to vData[iRow][12] // Name: CCGS215_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][14]  to vData[iRow][14] // Name: CSAG379_ID, Length: 100, Datatype: String
                                Move vData[iRow-1][22]  to vData[iRow][22] // Name: CSAG308_ID, Length: 10, Datatype: Integer
                                Move vData[iRow-1][23]  to vData[iRow][23] // Name: CSAG308_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][24]  to vData[iRow][24] // Name: ID_DT_APARTIR, Length: 100, Datatype: String
                                Move vData[iRow-1][25]  to vData[iRow][25] // Name: TRANSIT_TIME, Length: 20, Datatype: String
                                Move vData[iRow-1][26]  to vData[iRow][26] // Name: FREQUENCIA, Length: 100, Datatype: String
                                Move vData[iRow-1][27]  to vData[iRow][27] // Name: FREETIME, Length: 100, Datatype: String
                                Move vData[iRow-1][28]  to vData[iRow][28] // Name: CSAG325_VIA, Length: 100, Datatype: String
                                Move vData[iRow-1][29]  to vData[iRow][29] // Name: CSAG329_ID, Length: 3, Datatype: String
                                Move vData[iRow-1][30]  to vData[iRow][30] // Name: CSAG345_ID, Length: 10, Datatype: Integer
                                Move vData[iRow-1][31]  to vData[iRow][31] // Name: CSAG345_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][32]  to vData[iRow][32] // Name: ID_IMO, Length: 1, Datatype: String
                                Move vData[iRow-1][33]  to vData[iRow][33] // Name: ID_NOTSTACKBLE, Length: 1, Datatype: String
                                Move vData[iRow-1][34]  to vData[iRow][34] // Name: ID_PERSONNAL, Length: 1, Datatype: String
        
                                // Name: TAXA_ID, Length: 10, Datatype: Integer
                                Move (SqlFindValue(hStmt_HCGS3007,1)) to vData[iRow][11]
                                
                                If (HCGS3004.CCGS202_ID = 'LCL') Begin
                                    // Name: TP_CONTAINER, Length: 14, Datatype: String --- TIPO EQUIPAMENTO
                                    Move (Trim(SqlFindValue(hStmt_HCGS3007,6))) to vData[iRow][21] 
                                    
                                    // Name: DESCRICAO, Length: 200, Datatype: String --- NOME DA TAXA
                                    Move (Trim(SqlFindValue(hStmt_HCGS3007,2)))    to vData[iRow][13]
                                    If (vData[iRow][21]<>Rtrim(TSMG800.NAOSEAPLICA_CNTR));
                                        Move (String(vData[iRow][13])*'-'*String(vData[iRow][21])) to vData[iRow][13] 
                                    
                                    If (vData[iRow][21]=Rtrim(TSMG800.NAOSEAPLICA_CNTR)) Move '-' to vData[iRow][21]
                                    
                                    // Name: TAXA_CLASSES, Length: 20, Datatype: String
                                    Move (Trim(SqlFindValue(hStmt_HCGS3007,3)))    to vData[iRow][15] 
            
                                    // Name: TP_CALCULO_V_ID, Length: 10, Datatype: Integer
                                    Move (SqlFindValue(hStmt_HCGS3007,7)) to vData[iRow][18] 
                                    // Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                    If (SqlFindValue(hStmt_HCGS3007,7) = 7) Move (Trim('FIXO')) to vData[iRow][19] 
                                    Else Move (Trim(SqlFindValue(hStmt_HCGS3007,8))) to vData[iRow][19]
                                    
                                    // Name: VL_VENDA, Length: 8, Precision: 2, Datatype: Number
                                    Move (doNumber(SqlFindValue(hStmt_HCGS3007,4))) to nSoma
                                    Move (FormatNumber(nSoma,2)) to vData[iRow][17]
                                    
                                    // Name: MOEDA_VENDA, Length: 12, Datatype: String
                                    Move (SqlFindValue(hStmt_HCGS3007,5)) to vData[iRow][16]
                                    
                                    // CAMPO VALORES STRING 150
                                    //VL_VENDA + TP CALCULO
                                    Move (vData[iRow][17]) to sValores 
                                    Move (sValores+'*'*vData[iRow][19]) to sValores
                                    
                                    //MIN
                                    // Name: VL_MINIMO_V, Length: 8, Precision: 2, Datatype: Number
                                    Move (doNumber(SqlFindValue(hStmt_HCGS3007,9))) to nSoma
                                    Move (FormatNumber(nSoma,2)) to vData[iRow][20] 
                                    If (nSoma <> '0');
                                        Move (sValores*'- MIN'*vData[iRow][20]) to sValores
                                        
                                    //MAX
                                    // Name: VL_MAXIMO_V, Length: 8, Precision: 2, Datatype: Number
                                    Move (doNumber(SqlFindValue(hStmt_HCGS3007,10))) to nNumero
                                    If (nNumero <> 0);
                                        Move (sValores*'- MAX'*FormatNumber(nNumero,2)) to sValores 
                                    
                                    //OBS vinda do tarifario
                                    // Name: OBS_TARIFA, Length: 250, Datatype: String
                                    If (SqlFindValue(hStmt_HCGS3007,11) <> '');
                                        Move (sValores*'- OBS:'*Trim(SqlFindValue(hStmt_HCGS3007,38))) to sValores 
                                    
                                    Move (Trim(sValores)) to vData[iRow][20]
                                    //-------------------------------------------------------
                                    
                                   //AMOUNT
                                    // Name: VL_AMOUNT, Length: 14, Precision: 2, Datatype: Number
                                    Move (doNumber(SqlFindValue(hStmt_HCGS3007,12))) to nSoma
                                    Move (ROUNDALL(nSoma,2)) to nSoma
                                    Move (FormatNumber(nSoma,2)) to vData[iRow][35]
                                        
                                    // Name: VL_AMOUNT, Length: 14, Precision: 2, Datatype: Number
                                    Move "" to sValores
                                    Move (Trim(vData[iRow][16])) to sValores //MOEDA
                                    Move (sValores*vData[iRow][35]) to sValores 
                                    
                                    // Name: MODO DE PAGAMENTO
                                    If (SqlFindValue(hStmt_HCGS3007,13) <> '');
                                        Move (sValores*SqlFindValue(hStmt_HCGS3007,13)) to sValores 
                                    
                                    // Name: VL_AMOUNT, Length: 50, Precision: 2, Datatype: Number
                                    Move (Trim(sValores)) to vData[iRow][35] 
                                End
                                If (HCGS3004.CCGS202_ID = 'FCL') Begin
                                    
                                    Move (Trim(SqlFindValue(hStmt_HCGS3007,07))) to sTipoCalc
                                    //DESCRICAO - NOME DA -- Name: DESCRICAO, Length: 200, Datatype: String
                                    Move (Trim(SqlFindValue(hStmt_HCGS3007,37))) to vData[iRow][13] 
                                    //MOEDA - MOEDA -- Name: MOEDA_VENDA, Length: 12, Datatype: String
                                    Move (Trim(SqlFindValue(hStmt_HCGS3007,17))) to vData[iRow][16] 
                                    
                                    //--- TIPO EQUIPAMENTO -- Name: TP_CONTAINER, Length: 14, Datatype: String
                                    Move (Trim(SqlFindValue(hStmt_HCGS3007,22))) to vData[iRow][21] 
                                    // Name: VL_VENDA, Length: 8, Precision: 2, Datatype: Number
                                    Move (Trim(SqlFindValue(hStmt_HCGS3007,18))) to nAmount 
                                    
                                    If (sTipoCalc = '2') Begin
                                        //20 - VALOR UNITARIO PARA 20
                                        If (vData[iRow][21] contains '20') Begin
                                            Move nAmount to vData[iRow][17] //VL_VENDA
                                        End
                                        Else Begin
                                            If (vData[iRow][17] = '') Move '-' to vData[iRow][17] //VL_VENDA
                                        End
                                        //40 - VALOR UNITARIO PARA 20
                                        If (vData[iRow][21] contains '40') Begin
                                            Move nAmount to vData[iRow][20] //VL_MINIMO_V
                                        End
                                        Else Begin
                                            If (vData[iRow][20] = '') Move '-' to vData[iRow][20] //VL_MINIMO_V
                                        End
                                    End
                                    Else Begin
                                        If (vData[iRow][17] = '') Move '-' to vData[iRow][17] //VL_VENDA
                                        If (vData[iRow][20] = '') Move '-' to vData[iRow][20] //VL_MINIMO_V
                                    End
                                    If (sTipoCalc <> '2') Begin
                                        //BL - VALOR UNITARIO PARA QUANDO O CALCULO NAO FOR POR EQUIPAMENTO
                                        If (vData[iRow][21] contains 'N.S.A.') Begin
                                            Move nAmount to vData[iRow][35] //VL_AMOUNT
                                        End
                                    End
                                    //PREPAID/COLLECT - MODO DE PAGAMENTO VENDA
                                    // Name: MODO DE PAGAMENTO -- Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                    If (SqlFindValue(hStmt_HCGS3007,40) <> '') Begin
                                        Move (Trim(SqlFindValue(hStmt_HCGS3007,40))) to vData[iRow][19] 
                                    End
                                    Else Move 'Nao Info.' to vData[iRow][19] 
                                    
                                    If (not(bTaxaRepetida)) Begin
                                        Move (SqlFindValue(hStmt_HCGS3007,12)) to sAuxTaxes
                                    End
                                    
                                End
                                
                            SQL_FIND_END hStmt_HCGS3007 
                        End //(HCGS3004.CCGS202_ID = 'LCL')
                        If (HCGS3004.CCGS202_ID = 'FCL') Begin
                            Move "SELECT C.TAXA_ID,T.NM_TAXA,C.TAXA_CLASSE,C.VALOR,M.SIGLA,C.TP_CONTAINER,"     to sQuery
                            Move (sQuery*"MP.DESCRICAO FROM DBO.HCGS3007 C")                                    to sQuery
                            Move (sQuery*"INNER JOIN DBO.HCGS3001 T ON T.CODIGO=C.TAXA_ID")                     to sQuery
                            Move (sQuery*"LEFT JOIN DBO.CCGS218 M ON M.CODIGO = C.MOEDA_ID")                    to sQuery
                            Move (sQuery*"LEFT JOIN DBO.CCGS220 TP ON TP.CODIGO = C.TP_CALCULO")                to sQuery
                            Move (sQuery*"LEFT JOIN DBO.CCGS206 MP ON MP.CODIGO=C.MD_PAGTO")                    to sQuery
                            Move (sQuery*"WHERE C.PROPOSTA_ID=%1 AND HCGS3006_ID=0 AND TAXA_ID NOT IN (%2)")    to sQuery
                            Move (SFormat(sQuery,sHCGS3004PROPOSTA,sTaxasFclBuscaComissao))                     to sQuery
                            

                            SQL_FIND_BEGIN hStmt_HCGS3007 sQuery
                                Move (SizeOfArray(vData)) to iRow
                                //CAMPOS AUTOMATICOS
                                Move vData[iRow-1][0]   to vData[iRow][0]  // Name: PROPOSTA_ID, Length: 10, Datatype: Integer
                                Move vData[iRow-1][1]   to vData[iRow][1]  // Name: CCGS210_ID, Length: 10, Datatype: Integer
                                Move vData[iRow-1][2]   to vData[iRow][2]  // Name: CCGS210_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][3]   to vData[iRow][3]  // Name: CARRIER_ID, Length: 10, Datatype: Integer
                                Move vData[iRow-1][4]   to vData[iRow][4]  // Name: CARRIER_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][5]   to vData[iRow][5]  // Name: PROTOCOLO_ID, Length: 15, Datatype: String
                                Move vData[iRow-1][6]   to vData[iRow][6]  // Name: CONTRATO_NR, Length: 64, Datatype: String
                                Move vData[iRow-1][7]   to vData[iRow][7]  // Name: POD, Length: 10, Datatype: Integer
                                Move vData[iRow-1][8]   to vData[iRow][8]  // Name: POD_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][9]   to vData[iRow][9]  // Name: POL, Length: 10, Datatype: Integer
                                Move vData[iRow-1][10]  to vData[iRow][10] // Name: POL_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][12]  to vData[iRow][12] // Name: CCGS215_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][14]  to vData[iRow][14] // Name: CSAG379_ID, Length: 100, Datatype: String
                                Move vData[iRow-1][22]  to vData[iRow][22] // Name: CSAG308_ID, Length: 10, Datatype: Integer
                                Move vData[iRow-1][23]  to vData[iRow][23] // Name: CSAG308_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][24]  to vData[iRow][24] // Name: ID_DT_APARTIR, Length: 100, Datatype: String
                                Move vData[iRow-1][25]  to vData[iRow][25] // Name: TRANSIT_TIME, Length: 20, Datatype: String
                                Move vData[iRow-1][26]  to vData[iRow][26] // Name: FREQUENCIA, Length: 100, Datatype: String
                                Move vData[iRow-1][27]  to vData[iRow][27] // Name: FREETIME, Length: 100, Datatype: String
                                Move vData[iRow-1][28]  to vData[iRow][28] // Name: CSAG325_VIA, Length: 100, Datatype: String
                                Move vData[iRow-1][29]  to vData[iRow][29] // Name: CSAG329_ID, Length: 3, Datatype: String
                                Move vData[iRow-1][30]  to vData[iRow][30] // Name: CSAG345_ID, Length: 10, Datatype: Integer
                                Move vData[iRow-1][31]  to vData[iRow][31] // Name: CSAG345_DS, Length: 100, Datatype: String
                                Move vData[iRow-1][32]  to vData[iRow][32] // Name: ID_IMO, Length: 1, Datatype: String
                                Move vData[iRow-1][33]  to vData[iRow][33] // Name: ID_NOTSTACKBLE, Length: 1, Datatype: String
                                Move vData[iRow-1][34]  to vData[iRow][34] // Name: ID_PERSONNAL, Length: 1, Datatype: String
                                
                                // Name: TAXA_ID, Length: 10, Datatype: Integer
                                Move (SqlFindValue(hStmt_HCGS3007,1)) to vData[iRow][11] 
                                
                                //DESCRICAO - NOME DA -- Name: DESCRICAO, Length: 200, Datatype: String
                                Move (Trim(SqlFindValue(hStmt_HCGS3007,2))) to vData[iRow][13] 
                                
                                // Name: TAXA_CLASSES, Length: 20, Datatype: String
                                Move (Trim(SqlFindValue(hStmt_HCGS3007,3))) to vData[iRow][15] 
                                
                                //MOEDA - MOEDA -- Name: MOEDA_VENDA, Length: 12, Datatype: String
                                Move (Trim(SqlFindValue(hStmt_HCGS3007,5))) to vData[iRow][16] 
                                
                                //--- TIPO EQUIPAMENTO -- Name: TP_CONTAINER, Length: 14, Datatype: String
                                Move (Trim(SqlFindValue(hStmt_HCGS3007,6))) to vData[iRow][21] 
                                
                                // Name: VL_VENDA, Length: 8, Precision: 2, Datatype: Number
                                Move (Trim(SqlFindValue(hStmt_HCGS3007,4))) to nAmount 
                                
                                //20 - VALOR UNITARIO PARA 20
                                If (vData[iRow][21] contains '20') Begin
                                    Move nAmount to vData[iRow][17] //VL_VENDA
                                End
                                Else Begin
                                    If (vData[iRow][17] = '') Move '-' to vData[iRow][17] //VL_VENDA
                                End
                                //40 - VALOR UNITARIO PARA 20
                                If (vData[iRow][21] contains '40') Begin
                                    Move nAmount to vData[iRow][20] //VL_MINIMO_V
                                End
                                Else Begin
                                    If (vData[iRow][20] = '') Move '-' to vData[iRow][20] //VL_MINIMO_V
                                End
                                //BL - VALOR UNITARIO PARA QUANDO O CALCULO NAO FOR POR EQUIPAMENTO
                                If (vData[iRow][21] contains 'N.S.A.') Begin
                                    Move nAmount to vData[iRow][35] //VL_AMOUNT
                                End
                                //PREPAID/COLLECT - MODO DE PAGAMENTO VENDA
                                // Name: MODO DE PAGAMENTO -- Name: TP_CALCULO_V_DS, Length: 100, Datatype: String
                                If (SqlFindValue(hStmt_HCGS3007,7) <> '') Begin
                                    Move (Trim(SqlFindValue(hStmt_HCGS3007,7))) to vData[iRow][19] 
                                End
                                Else Move 'Nao Info.' to vData[iRow][19]
                            SQL_FIND_END hStmt_HCGS3007
                        End //(HCGS3004.CCGS202_ID = 'FCL')
                    Loop //(SizeOfArray(vData)-1)
                    
                Case Break
            Case End

            Function_Return vData
        End_Function //AddRDSData

        Procedure SetSortFields
            String sReportId

            Get psReportId to sReportId

            // The wizard did not detect any sort fields. If you later add sort fields to the report
            // and want to alter them via this method you probably want to remove the existing sort fields first
            Send RemoveAllRecordSortFields sReportId
            Send AddRecordSortField sReportId "{HCGS3004.PROPOSTA_ID}" C_DRAscending
        End_Procedure

    End_Object // oReport
    
    { Published = True  }
    { Description = "fDoAmountProp"  }
    Function fDoAmountProp String sRecnum Returns Number
        
        Number nCalculado
        Number nValue
        String sQuery
        Integer iQtd
        Number nCalculo nCbm nSoma
        Number nComissao nWeight nVALOR

        Clear HCGS3006
        Move sRecnum to HCGS3006.Recnum
        Find EQ HCGS3006 by 0

        Move "SELECT SUM(AMOUNT) FROM DBO.HCGS3007 WHERE PROPOSTA_ID = %1 AND TAXA_ID = %2 AND TAXA_CLASSE = '%3'" to sQuery
        Move (SFormat(sQuery,HCGS3006.PROPOSTA_ID,HCGS3006.TAXA_ID,Trim(HCGS3006.TAXA_CLASSES))) to sQuery

        SQL_FIND_BEGIN hStmt_search sQuery
            Move (SqlFindValue(hStmt_search,1)) to nSoma
        SQL_FIND_END hStmt_search
        Move (nSoma+HCGS3006.VL_AMOUNT) to nVALOR
        
        Clear HCGS3004
        Move HCGS3006.PROPOSTA_ID to HCGS3004.PROPOSTA
        Find EQ HCGS3004 by 1
        
        // CALCULO PARA TOM/M3 E PESO CUBADO.
        If (HCGS3006.TP_CALCULO_V = '1' or HCGS3006.TP_CALCULO_V = '5') Begin
            
            Move HCGS3004.TT_CBM to nCbm
            Move HCGS3004.TT_WEIGHT to nWeight
            
            Move 1 to nValue
            
            If (nWeight<>0 and nCbm<>0) Begin
                Move (nWeight/1000) to nValue
                If (nCbm>nValue) Move nCbm to nValue
            End
            Else If (nWeight<>0) Move (nWeight/1000) to nValue
            Else If (nCbm<>0) Move nCbm to nValue
            Move (nVALOR/nValue) to nVALOR
        End
        
        // CALCULO DO PESO 
        If (HCGS3006.TP_CALCULO_V = '3') Begin
            Move HCGS3004.TT_WEIGHT to nWeight
            Move (nWeight/HCGS3006.PESO_FAIXA_V) to nValue
            Move (nVALOR/nValue) to nCalculado
        End
        
        //EQUIPAMENTO (CNTR)
        If (HCGS3006.TP_CALCULO_V = '2') Begin
            If (HCGS3006.TP_CONTAINER <> 'N.S.A.') Begin
                Move "SELECT SUM(PCS) FROM DBO.HCGS3005 WHERE PROPOSTA_ID=%1 AND EQUIPAMENTO='%2'" to sQuery
                Move (SFormat(sQuery,HCGS3006.PROPOSTA_ID,HCGS3006.TP_CONTAINER)) to sQuery
            End
            Else Begin
                Move "SELECT SUM(PCS) FROM DBO.HCGS3005 WHERE PROPOSTA_ID=%1" to sQuery
                Move (SFormat(sQuery,HCGS3006.PROPOSTA_ID)) to sQuery 
            End

            SQL_FIND_BEGIN hStmt_container sQuery
                Move (SqlFindValue(hStmt_container,1)) to iQtd
            SQL_FIND_END hStmt_container
            
            Move (nVALOR/iQtd) to nVALOR
        End
        
        //CALCULO POR TEUS
        If (HCGS3006.TP_CALCULO_V = '9') Begin
            Move 0 to iQtd
            Move "SELECT EQUIPAMENTO,PCS FROM DBO.HCGS3005 WHERE PROPOSTA_ID=%1 AND EQUIPAMENTO NOT LIKE '%N.S.A.%'" to sQuery
            Move (SFormat(sQuery,HCGS3006.PROPOSTA_ID)) to sQuery

            SQL_FIND_BEGIN hStmt_search sQuery
                If (SqlFindValue(hStmt_search,1) contains '20') Begin                    
                    Add (SqlFindValue(hStmt_search,2)) to iQtd
                End
                If (SqlFindValue(hStmt_search,1) contains '40') Begin
                    Add (SqlFindValue(hStmt_search,2)*2) to iQtd
                End
            SQL_FIND_END hStmt_search 
            
            Move (nVALOR/iQtd) to nVALOR
            
        End
        
        Move (ROUNDALL(nVALOR,2)) to nVALOR
        
        Function_Return nVALOR
        
    End_Function //fDoAmount
    
    { Published = True  }
    { Description = "RunReport"  }
    Function RunReport String aUsuarioSessao String sIdProposta String sOpcao Returns String
        Integer iX
        Boolean bExist
        String sOurFilename
        String sReportId 
        String sReportName
        String sPDFfile 
        String sHorario
        String sDate sQuery
        
        Clear CSAG311
        Move aUsuarioSessao to CSAG311.USUARIOSESSAO
        Find Eq CSAG311 by 1
        If (not(Found)) Function_Return sOurFilename
        
        Clear HCGS3004
        Move sIdProposta to HCGS3004.PROPOSTA
        Find Eq HCGS3004 by 1
        If (not(Found)) Function_Return sOurFilename
        
        Clear CSAG300
        Move CSAG311.USUARIONUMERO to CSAG300.USUARIONUMERO
        Find Eq CSAG300 by 3
        If (not(Found)) Function_Return sOurFilename

        If (HCGS3004.CCGS202_ID = 'AIR') Begin
            Get RunReport of oRvPropFreightAir aUsuarioSessao sIdProposta sOpcao to sOurFilename
            Function_Return sOurFilename
        End
        Else Begin
            If (HCGS3004.CCGS202_ID = 'LCL') Begin
                If (CSAG300.USUARIOIDIOMA = 3) Move "..\..\WVDF_CAC_v8r0\Reports\PropFr8RDS_original_4_0-sp.dr" to sReportName
                Else Move "..\..\WVDF_CAC_v8r0\Reports\PropFr8RDS_original_4_0.dr" to sReportName
            End
            
            If (HCGS3004.CCGS202_ID = 'FCL') Begin
                If (CSAG300.USUARIOIDIOMA = 3) Move "..\..\WVDF_CAC_v8r0\Reports\PropFr8RDS_original_4_0-fclsp.dr" to sReportName
                Else Move "..\..\WVDF_CAC_v8r0\Reports\PropFr8RDS_original_4_0-fcl.dr" to sReportName
            End
    
            Set psReportName of oReport to sReportName
            
            Send SetUsuariosessao aUsuarioSessao
            Send SetPrograma "oRvPropFreight"
            
            Move (get_current_time(False))      to sHorario
            Move (Replaces(':', sHorario, ''))  to sHorario
            Move (get_SysDate(False)) to sDate
            Move (Mid(sDate, 4, 7)+Mid(sDate, 2, 4)+Mid(sDate, 2, 1)) to sDate
            Move ('propfr8_%1.%2.%3.%4.pdf') to sPDFfile
            Move (SFormat(sPDFfile,sIdProposta,CSAG300.USUARIONUMERO,sDate,sHorario)) to sPDFfile
            
            Move "UPDATE DBO.HCGS3004 SET ARQUIVO_PROPOSTA='%1' WHERE PROPOSTA=%2" to sQuery
            Move (SFormat(sQuery,sPDFfile,sIdProposta)) to sQuery
            SQL_EXECUTE hStmt_search sQuery

            Clear TSMG800
            Smart_Find Ge TSMG800 by 0
            Move (Trim(TSMG800.COPY_TEXTFILES)+'PDF\') to sOurFilename
            Move (sOurFilename + sPDFfile) to sOurFilename
    
            Set piProposta to sIdProposta
    
            // Tell the report to print to a file in PDF format to sOurFilename
            drPDFExportOptions PDFExportOptions 
    
            Get OpenReport              of oReport to sReportId  
            Get DefaultPDFExportOptions of oReport to PDFExportOptions
    
            Move C_drHigh to PDFExportOptions.iImageQuality
    
            Set pPDFExportOptions       of oReport to PDFExportOptions
    
            Set peOutputDestination     of oReport      to PRINT_TO_FILE
            Set peExportType            of oReport      to C_DRPDF
            Set psExportFileName        of oReport      to sOurFilename
    
            Send ExportReport of oReport C_DRPDF sOurFileName
            
            For iX from 0 to 10000
                File_Exist sOurFileName bExist
                If (bExist) Move 100001 to iX
            Loop
            
            File_Exist sOurFileName bExist
            If (not(bExist)) Begin
                Move (Trim(TSMG800.HTTP_ANEXOS)+'') to sOurFilename
                Move (Replaces('{aHTTP}', sOurFilename, Trim(TSMG800.HTTP_SITE))) to sOurFilename
            End
            Else Begin
                If (sOpcao = '1') Begin
                    Move (Trim(TSMG800.HTTP_ANEXOS)+'PDF/'+ sPDFfile) to sOurFilename
                    Move (Replaces('{aHTTP}', sOurFilename, Trim(TSMG800.HTTP_SITE))) to sOurFilename
                End
            End
            
            //CAMINHO PARA DISPARO NOVO
            //\\192.168.6.18\c$\cross\WVDF_CAC_v8r0\AppHtml\FILES\propostas\[proposta]\[nome do arquivo]
//            Move ('\\192.168.6.18\c$\cross\WVDF_CAC_v8r0\AppHtml\FILES\propostas\'*sIdProposta*'\'*sPDFfile) to sOurFilename
            Function_Return sOurFilename
        End //- not AIR

    End_Function //RunReport
    
    
End_Object //oRvPropFreight
